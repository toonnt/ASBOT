from ASULBOT import *
from datetime import datetime
from time import sleep
from bs4 import BeautifulSoup
from gtts import gTTS
from googletrans import Translator
from multiprocessing import Pool, Process
from ffmpy import FFmpeg
from humanfriendly import format_timespan, format_size, format_number, format_length
import time, random, asyncio, timeit, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, urllib, urllib.parse, ast, pytz, wikipedia, pafy, youtube_dl, atexit

print ("\n\n ---  ASUL BOT PY3 ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö  ---\n")

botStart = time.time()

line = ASUL("toon.myfriend@gmail.com","toonnt38")
#line = ASUL("EusluwKjSfKXnfAvzFH1.KaptOybxCrifYDMnQKDtuq.cUjlo0FXzIMK949AR/qSrXOgNXlIchCUJdSgL6CUc0E=")#‡∏£‡πà‡∏≤‡∏á‡∏Ñ‡∏¥‡∏Å
#line = ASUL("Email","Password")
line.log("Auth Token : " + str(line.authToken))
channelToken = line.getChannelResult()
#line.log("Channel Token : " + str(channelToken))

#as1 = ASUL("Etb0ASZe1ecdQHKxfgA6.u1a+KpknCNGv1jGvlGx9vG.6xX3kweoGWQZUSO56pHhoXZeYvnKEmbhSFPYhDNCrRU=")
#as1 = ASUL("EvLk6domTEjne1EuFZz6.u1a+KpknCNGv1jGvlGx9vG.wGLgaHee1Fj5EoHTOcxzcCenkCy/wQSQbjyjbs0Vm60=")#‡∏£‡∏≤‡∏ä‡∏≤
#as1 = ASUL("Email","Password")
#as1 = ASUL()
#as1.log("Auth Token : " + str(as1.authToken))
#channelToken = as1.getChannelResult()
#as1.log("Channel Token : " + str(channelToken))

as1 = line

ki2 = ASUL

AsulLogged = False

#readOpen = codecs.open("read.json","r","utf-8")
#settingsOpen = codecs.open("temp.json","r","utf-8")

lineMID = line.profile.mid
as1MID = as1.profile.mid
lineProfile = line.getProfile()
as1Profile = as1.getProfile()
lineSettings = line.getSettings()
as1Settings = as1.getSettings()

oepoll = ASULPoll(line)
oepoll1 = ASULPoll(as1)

responsename = line.getProfile().displayName
responsename2 = as1.getProfile().displayName


#read = json.load(readOpen)
#settings = json.load(settingsOpen)

#settings["myProfile"]["displayName"] = lineProfile.displayName 
#settings["myProfile"]["statusMessage"] = lineProfile.statusMessage
#settings["myProfile"]["pictureStatus"] = lineProfile.pictureStatus

admin=[lineMID,"u5d777f646c37180c939be97aa5097096"]

Owner=[lineMID,"u5d777f646c37180c939be97aa5097096"]

Bots=[lineMID,as1MID]

KAC=[as1]

#==============================================================================#
settings = {
    "autoAdd": True,
    "autoBlock": False,
    "autoJoin": True,
    "autoLeave": True,
    "autoRead": False,
    "Api": False,
    "lang":"JP",
    "blacklist":{},
    "wblack": False,
    "wblacklist": False,
    "dblack": False,
    "dblacklist": False,
    "protect": False,
    "qrprotect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "detectMention": True,
    "Mentionkick": False,
    "admin": False,
    "checkContact": False,
    "changeGroupPicture":[],
    "changePicture": {},
    "changePicture1": {},
    "Sambutan": True,
    "Sider":{},
    "checkSticker": False,
    "userAgent": [
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; Linux amd64; rv:5.0) Gecko/20100101 Firefox/5.0 (Debian)",
        "Mozilla/5.0 (X11; U; Linux amd64; en-US; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 FirePHP/0.5",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux ppc; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux AMD64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1.1; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; U; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; rv:5.0) Gecko/20100101 Firefox/5.0"
    ],
    "mimic": {
        "copy": False,
        "status": False,
        "target": {}
    }
}

read = {
    "readPoint": {},
    "readMember": {},
    "readTime": {},
    "ROM": {}
}

lgncall = ""
def logincall(this):
    line.sendMessage(lgncall,"Asul login url: " + this)

myProfile = {
	"displayName": "",
	"statusMessage": "",
	"pictureStatus": ""
}

cctv = {
    "cyduk":{},
    "point":{},
    "MENTION":{},
    "sidermem":{}
}

myProfile["displayName"] = lineProfile.displayName
myProfile["statusMessage"] = lineProfile.statusMessage
myProfile["pictureStatus"] = lineProfile.pictureStatus

user1 = lineMID
user2 = ""
#==============================================================================#
def restartBot():
    print ("[ INFO ] BOT RESETTED")
    time.sleep(3)
    python = sys.executable
    os.execl(python, python, *sys.argv)
    
def logError(text):
    line.log("[ ERROR ] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))
        
def sendMention(to, mid, firstmessage, lastmessage):
    try:
        arrData = ""
        text = "%s " %(str(firstmessage))
        arr = []
        mention = "@x "
        slen = str(len(text))
        elen = str(len(text) + len(mention) - 1)
        arrData = {'S':slen, 'E':elen, 'M':mid}
        arr.append(arrData)
        text += mention + str(lastmessage)
        line.sendMessage(to, text, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def sendMessage(to, Message, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes._from = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1

def sendMessageWithMention(to, mid):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(mid)+'}'
        text_ = '@x '
        line.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentType=0)
    except Exception as error:
        logError(error)

        
def mentionMembers(to, mid):
    try:
        arrData = ""
        textx = "‚ïî‚ïê‚ïê[‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô {} ‡∏Ñ‡∏ô]\n‚ï† ".format(str(len(mid)))
        arr = []
        no = 1
        for i in mid:
            mention = "@x\n"
            slen = str(len(textx))
            elen = str(len(textx) + len(mention) - 1)
            arrData = {'S':slen, 'E':elen, 'M':i}
            arr.append(arrData)
            textx += mention
            if no < len(mid):
                no += 1
                textx += "‚ï†‚éÜ "
            else:
                try:
                    textx += "‚ïö‚ïê‚ïê[‡∏Å‡∏•‡∏∏‡πà‡∏°üëâ {} ]".format(str(line.getGroup(to).name))
                except:
                    pass
        line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def backupData():
    try:
        backup = settings
        f = codecs.open('temp.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        backup = read
        f = codecs.open('read.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        return True
    except Exception as error:
        logError(error)
        return False

def helpmessage():
    helpMessage = "‚ïî‚ïê‚ïê[ASUL BOT PY3]" + "\n" + \
                  "‚ï† Help" + "\n" + \
                  "‚ï† Translate" + "\n" + \
                  "‚ï† TextToSpeech" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Status Command ]" + "\n" + \
                  "‚ï† Restart" + "\n" + \
                  "‚ï† Runtime" + "\n" + \
                  "‚ï† Speed" + "\n" + \
                  "‚ï† Status" + "\n" + \
                  "‚ï† About" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Settings Command ]" + "\n" + \
                  "‚ï† AutoAdd„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† AutoJoin„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† AutoLeave„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† AutoRead„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† CheckSticker„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† DetectMention„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Self Command ]" + "\n" + \
                  "‚ï† Me" + "\n" + \
                  "‚ï† MyMid" + "\n" + \
                  "‚ï† MyName" + "\n" + \
                  "‚ï† MyBio" + "\n" + \
                  "‚ï† MyPicture" + "\n" + \
                  "‚ï† MyVideoProfile" + "\n" + \
                  "‚ï† MyCover" + "\n" + \
                  "‚ï† StealContact„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealMid„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealName„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealBio„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealPicture„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealVideoProfile„ÄåMention„Äç" + "\n" + \
                  "‚ï† StealCover„ÄåMention„Äç" + "\n" + \
                  "‚ï† CloneProfile„ÄåMention„Äç" + "\n" + \
                  "‚ï† RestoreProfile" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Group Command ]" + "\n" + \
                  "‚ï† GroupCreator" + "\n" + \
                  "‚ï† GroupId" + "\n" + \
                  "‚ï† GroupName" + "\n" + \
                  "‚ï† GroupPicture" + "\n" + \
                  "‚ï† GroupTicket" + "\n" + \
                  "‚ï† GroupTicket„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† GroupList" + "\n" + \
                  "‚ï† GroupMemberList" + "\n" + \
                  "‚ï† GroupInfo" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Special Command ]" + "\n" + \
                  "‚ï† Mimic„ÄåOn/Off„Äç" + "\n" + \
                  "‚ï† MimicList" + "\n" + \
                  "‚ï† MimicAdd„ÄåMention„Äç" + "\n" + \
                  "‚ï† MimicDel„ÄåMention„Äç" + "\n" + \
                  "‚ï† Mention" + "\n" + \
                  "‚ï† Lurking„ÄåOn/Off/Reset„Äç" + "\n" + \
                  "‚ï† Lurking" + "\n" + \
                  "‚ï†‚ïê‚ïê[ Media Command ]" + "\n" + \
                  "‚ï† Kalender" + "\n" + \
                  "‚ï† CheckDate„ÄåDate„Äç" + "\n" + \
                  "‚ï† InstagramInfo„ÄåUserName„Äç" + "\n" + \
                  "‚ï† InstagramPost„ÄåUserName„Äç" + "\n" + \
                  "‚ï† SearchYoutube„ÄåSearch„Äç" + "\n" + \
                  "‚ï† SearchMusic„ÄåSearch„Äç" + "\n" + \
                  "‚ï† SearchLyric„ÄåSearch„Äç" + "\n" + \
                  "‚ï† SearchImage„ÄåSearch„Äç" + "\n" + \
                  "‚ï† ScreenshootWebsite„ÄåLinkURL„Äç" + "\n" + \
                  "‚ïö‚ïê‚ïê[ASUL Bot Py3]\n [By:‚îÖ‚ïê‡§π‡§µ„Åï‡∫π‡ßß„Åï‡∏±‡ß©‡Æ¥‡¶£‡ßß‡§π‚ïê‚îÖ]"
    return helpMessage
    
def helpmessage2():
    helpMessage2 = """||<<<<‚úíÔ∏è‚úíÔ∏èASUL BOT PY3‚úíÔ∏è‚úí>>>>
|| <<<‡∏ä‡∏∏‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á>>>Ô∏è 
||‚úíÔ∏è‚úí Ô∏è‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 
||‚úíÔ∏è‚úíÔ∏è ‡∏Ñ‡∏ó
||‚úíÔ∏è‚úíÔ∏è ‡∏Ñ‡∏ó @
||‚úíÔ∏è‚úí ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô  „Äå‡∏î‡∏∂‡∏á‡∏Ñ‡∏ó.‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô„Äç
||‚úíÔ∏è‚úíÔ∏è ‡πÑ‡∏≠‡∏î‡∏µ
||‚úíÔ∏è‚úíÔ∏è ‡πÑ‡∏≠‡∏î‡∏µ @
||‚úíÔ∏è‚úí ‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô  „Äå‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô„Äç
||‚úíÔ∏è‚úíÔ∏è ‡∏õ‡∏Å
||‚úíÔ∏è‚úíÔ∏è ‡∏õ‡∏Å @
||‚úíÔ∏è‚úíÔ∏è ‡∏î‡∏¥‡∏™
||‚úíÔ∏è‚úíÔ∏è ‡∏î‡∏¥‡∏™ @
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™
||‚úíÔ∏è‚úíÔ∏è ‡∏ï‡∏±‡∏™
||‚úíÔ∏è‚úíÔ∏è ‡∏ï‡∏±‡∏™ @
||‚úíÔ∏è‚úíÔ∏è ‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠
||‚úíÔ∏è‚úíÔ∏è ‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ @
||‚úíÔ∏è‚úíÔ∏è ‡∏ä‡∏∑‡πà‡∏≠
||‚úíÔ∏è‚úíÔ∏è ‡∏ä‡∏∑‡πà‡∏≠ @
||‚úíÔ∏è‚úí ‡∏≠‡∏±‡∏û‡∏ä‡∏∑‡πà‡∏≠ „Äå‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠„Äç
||‚úíÔ∏è‚úí Restart  
||‚úíÔ∏è‚úí Runtime
||‚úíÔ∏è‚úí Speed
||‚úíÔ∏è‚úí ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
||‚úíÔ∏è‚úí Copy @
||‚úíÔ∏è‚úí ‡∏Å‡∏•‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á
||‚úíÔ∏è‚úí ‡∏û‡∏π‡∏î „Äå‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°„Äç
||‚úíÔ∏è‚úí ‡∏´‡∏≤‡∏£‡∏π‡∏õ „Äå‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤„Äç
||‚úíÔ∏è‚úí ‡πÅ‡∏ó‡∏Ñ
||‚úíÔ∏è‚úí ‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
||‚úíÔ∏è‚úí ‡πÄ‡∏ï‡∏∞‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
||‚úíÔ∏è‚úí Virus  „Äå‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÑ‡∏ß‡∏£‡∏±‡∏™„Äç
||‚úíÔ∏è‚úí ‡∏¢‡∏π‡∏ó‡∏π‡∏õ „Äå‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤„Äç
||‚úíÔ∏è‚úí ‡∏≠‡∏≠‡∏Å „Äå‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç
||‚úíÔ∏è‚úí ‡∏•‡∏ö‡∏£‡∏±‡∏ô,Reject
||‚úíÔ∏è‚úí ‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á  „Äå‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô„Äç
||‚úíÔ∏è‚úí .     „Äå‡πÄ‡∏ä‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô„Äç
||‚úíÔ∏è‚úí ‡∏•‡∏ö‡∏£‡∏±‡∏ô1  „Äå‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô„Äç
||‚úíÔ∏è‚úí ‡∏î‡∏≥  -‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥
||‚úíÔ∏è‚úí ‡∏Ç‡∏≤‡∏ß  -‡πÅ‡∏Å‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥
||‚úíÔ∏è‚úí ‡πÄ‡∏ä‡∏Ñ‡∏î‡∏≥
||‚úíÔ∏è‚úí ‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥
|| <<<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô>>>
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô  -‡πÄ‡∏ä‡∏Ñ‡∏£‡∏ß‡∏°
||‚úíÔ∏è‚úí ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô
||‚úíÔ∏è‚úí ‡∏≠‡πà‡∏≤‡∏ô
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ  -‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
||‚úíÔ∏è‚úí ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ  -‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
|| <<<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°>>>
||‚úíÔ∏è‚úí GroupInfo
||‚úíÔ∏è‚úí GroupMemberList
||‚úíÔ∏è‚úí GroupList
||‚úíÔ∏è‚úí GroupName
||‚úíÔ∏è‚úí GroupCreator
||‚úíÔ∏è‚úí GroupId
||‚úíÔ∏è‚úí GroupPicture
||‚úíÔ∏è‚úí GroupTicket
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î/‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î -‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô  -‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏¥‡∏ç/‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏¥‡∏ç
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å
||‚úíÔ∏è‚úí ‡πÄ‡∏ä‡∏Ñ‡∏Å‡∏±‡∏ô  -‡πÄ‡∏ä‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô
|| <<<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤>>>
||‚úíÔ∏è‚úí ‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡πà‡∏≤
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏î,‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏î
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å,‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤,‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ,‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ
||‚úíÔ∏è‚úí ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å,‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å
||‚úíÔ∏è‚úí Read„ÄåOn/Off„Äç
||‚úíÔ∏è‚úí CheckSticker„ÄåOn/Off„Äç
|| <<<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå>>>
||‚úíÔ∏è‚úí ‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤
||‚úíÔ∏è‚úí ‡∏Ñ‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å
||‚úíÔ∏è‚úí ‡πÄ‡∏ä‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠  -‡πÄ‡∏ä‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó
||‚úíÔ∏è‚úí ‡πÄ‡∏ä‡∏Ñ‡∏ö‡∏≠‡∏ó  -‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ó‡∏ö‡∏≠‡∏ó
||‚úíÔ∏è‚úí ‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á  -‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡πâ‡∏ô
||‚úíÔ∏è‚úí‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è‚úíÔ∏è
|| <<<<<ASUL BOT PY3>>>>>
|| <BY ‚ïê‡§π‡§µ„Åï‡∫π‡ßß„Åï‡∏±‡ß©‡Æ¥‡¶£‡ßß‡§π‚ïê >

"""
    return helpMessage2


def helptexttospeech():
    helpTextToSpeech =   "‚ïî‚ïê‚ïê[ T E X T   T O   S P E E C H ]" + "\n" + \
                         "‚ï† af : Afrikaans" + "\n" + \
                         "‚ï† sq : Albanian" + "\n" + \
                         "‚ï† ar : Arabic" + "\n" + \
                         "‚ï† hy : Armenian" + "\n" + \
                         "‚ï† bn : Bengali" + "\n" + \
                         "‚ï† ca : Catalan" + "\n" + \
                         "‚ï† zh : Chinese" + "\n" + \
                         "‚ï† zh-cn : Chinese (Mandarin/China)" + "\n" + \
                         "‚ï† zh-tw : Chinese (Mandarin/Taiwan)" + "\n" + \
                         "‚ï† zh-yue : Chinese (Cantonese)" + "\n" + \
                         "‚ï† hr : Croatian" + "\n" + \
                         "‚ï† cs : Czech" + "\n" + \
                         "‚ï† da : Danish" + "\n" + \
                         "‚ï† nl : Dutch" + "\n" + \
                         "‚ï† en : English" + "\n" + \
                         "‚ï† en-au : English (Australia)" + "\n" + \
                         "‚ï† en-uk : English (United Kingdom)" + "\n" + \
                         "‚ï† en-us : English (United States)" + "\n" + \
                         "‚ï† eo : Esperanto" + "\n" + \
                         "‚ï† fi : Finnish" + "\n" + \
                         "‚ï† fr : French" + "\n" + \
                         "‚ï† de : German" + "\n" + \
                         "‚ï† el : Greek" + "\n" + \
                         "‚ï† hi : Hindi" + "\n" + \
                         "‚ï† hu : Hungarian" + "\n" + \
                         "‚ï† is : Icelandic" + "\n" + \
                         "‚ï† id : Indonesian" + "\n" + \
                         "‚ï† it : Italian" + "\n" + \
                         "‚ï† ja : Japanese" + "\n" + \
                         "‚ï† km : Khmer (Cambodian)" + "\n" + \
                         "‚ï† ko : Korean" + "\n" + \
                         "‚ï† la : Latin" + "\n" + \
                         "‚ï† lv : Latvian" + "\n" + \
                         "‚ï† mk : Macedonian" + "\n" + \
                         "‚ï† no : Norwegian" + "\n" + \
                         "‚ï† pl : Polish" + "\n" + \
                         "‚ï† pt : Portuguese" + "\n" + \
                         "‚ï† ro : Romanian" + "\n" + \
                         "‚ï† ru : Russian" + "\n" + \
                         "‚ï† sr : Serbian" + "\n" + \
                         "‚ï† si : Sinhala" + "\n" + \
                         "‚ï† sk : Slovak" + "\n" + \
                         "‚ï† es : Spanish" + "\n" + \
                         "‚ï† es-es : Spanish (Spain)" + "\n" + \
                         "‚ï† es-us : Spanish (United States)" + "\n" + \
                         "‚ï† sw : Swahili" + "\n" + \
                         "‚ï† sv : Swedish" + "\n" + \
                         "‚ï† ta : Tamil" + "\n" + \
                         "‚ï† th : Thai" + "\n" + \
                         "‚ï† tr : Turkish" + "\n" + \
                         "‚ï† uk : Ukrainian" + "\n" + \
                         "‚ï† vi : Vietnamese" + "\n" + \
                         "‚ï† cy : Welsh" + "\n" + \
                         "‚ïö‚ïê‚ïê[ Jangan Typo ]" + "\n" + "\n\n" + \
                          "Contoh : À¢·¥¨·µû-·¥µ·¥∞ ·∂†·¥±·¥∫·¥∞·µû ·¥∂·¥±·¥∏·¥±À£"
    return helpTextToSpeech
    
def helptranslate():
    helpTranslate =    "‚ïî‚ïê‚ïê[ T R A N S L A T E ]" + "\n" + \
                       "‚ï† af : afrikaans" + "\n" + \
                       "‚ï† sq : albanian" + "\n" + \
                       "‚ï† am : amharic" + "\n" + \
                       "‚ï† ar : arabic" + "\n" + \
                       "‚ï† hy : armenian" + "\n" + \
                       "‚ï† az : azerbaijani" + "\n" + \
                       "‚ï† eu : basque" + "\n" + \
                       "‚ï† be : belarusian" + "\n" + \
                       "‚ï† bn : bengali" + "\n" + \
                       "‚ï† bs : bosnian" + "\n" + \
                       "‚ï† bg : bulgarian" + "\n" + \
                       "‚ï† ca : catalan" + "\n" + \
                       "‚ï† ceb : cebuano" + "\n" + \
                       "‚ï† ny : chichewa" + "\n" + \
                       "‚ï† zh-cn : chinese (simplified)" + "\n" + \
                       "‚ï† zh-tw : chinese (traditional)" + "\n" + \
                       "‚ï† co : corsican" + "\n" + \
                       "‚ï† hr : croatian" + "\n" + \
                       "‚ï† cs : czech" + "\n" + \
                       "‚ï† da : danish" + "\n" + \
                       "‚ï† nl : dutch" + "\n" + \
                       "‚ï† en : english" + "\n" + \
                       "‚ï† eo : esperanto" + "\n" + \
                       "‚ï† et : estonian" + "\n" + \
                       "‚ï† tl : filipino" + "\n" + \
                       "‚ï† fi : finnish" + "\n" + \
                       "‚ï† fr : french" + "\n" + \
                       "‚ï† fy : frisian" + "\n" + \
                       "‚ï† gl : galician" + "\n" + \
                       "‚ï† ka : georgian" + "\n" + \
                       "‚ï† de : german" + "\n" + \
                       "‚ï† el : greek" + "\n" + \
                       "‚ï† gu : gujarati" + "\n" + \
                       "‚ï† ht : haitian creole" + "\n" + \
                       "‚ï† ha : hausa" + "\n" + \
                       "‚ï† haw : hawaiian" + "\n" + \
                       "‚ï† iw : hebrew" + "\n" + \
                       "‚ï† hi : hindi" + "\n" + \
                       "‚ï† hmn : hmong" + "\n" + \
                       "‚ï† hu : hungarian" + "\n" + \
                       "‚ï† is : icelandic" + "\n" + \
                       "‚ï† ig : igbo" + "\n" + \
                       "‚ï† id : indonesian" + "\n" + \
                       "‚ï† ga : irish" + "\n" + \
                       "‚ï† it : italian" + "\n" + \
                       "‚ï† ja : japanese" + "\n" + \
                       "‚ï† jw : javanese" + "\n" + \
                       "‚ï† kn : kannada" + "\n" + \
                       "‚ï† kk : kazakh" + "\n" + \
                       "‚ï† km : khmer" + "\n" + \
                       "‚ï† ko : korean" + "\n" + \
                       "‚ï† ku : kurdish (kurmanji)" + "\n" + \
                       "‚ï† ky : kyrgyz" + "\n" + \
                       "‚ï† lo : lao" + "\n" + \
                       "‚ï† la : latin" + "\n" + \
                       "‚ï† lv : latvian" + "\n" + \
                       "‚ï† lt : lithuanian" + "\n" + \
                       "‚ï† lb : luxembourgish" + "\n" + \
                       "‚ï† mk : macedonian" + "\n" + \
                       "‚ï† mg : malagasy" + "\n" + \
                       "‚ï† ms : malay" + "\n" + \
                       "‚ï† ml : malayalam" + "\n" + \
                       "‚ï† mt : maltese" + "\n" + \
                       "‚ï† mi : maori" + "\n" + \
                       "‚ï† mr : marathi" + "\n" + \
                       "‚ï† mn : mongolian" + "\n" + \
                       "‚ï† my : myanmar (burmese)" + "\n" + \
                       "‚ï† ne : nepali" + "\n" + \
                       "‚ï† no : norwegian" + "\n" + \
                       "‚ï† ps : pashto" + "\n" + \
                       "‚ï† fa : persian" + "\n" + \
                       "‚ï† pl : polish" + "\n" + \
                       "‚ï† pt : portuguese" + "\n" + \
                       "‚ï† pa : punjabi" + "\n" + \
                       "‚ï† ro : romanian" + "\n" + \
                       "‚ï† ru : russian" + "\n" + \
                       "‚ï† sm : samoan" + "\n" + \
                       "‚ï† gd : scots gaelic" + "\n" + \
                       "‚ï† sr : serbian" + "\n" + \
                       "‚ï† st : sesotho" + "\n" + \
                       "‚ï† sn : shona" + "\n" + \
                       "‚ï† sd : sindhi" + "\n" + \
                       "‚ï† si : sinhala" + "\n" + \
                       "‚ï† sk : slovak" + "\n" + \
                       "‚ï† sl : slovenian" + "\n" + \
                       "‚ï† so : somali" + "\n" + \
                       "‚ï† es : spanish" + "\n" + \
                       "‚ï† su : sundanese" + "\n" + \
                       "‚ï† sw : swahili" + "\n" + \
                       "‚ï† sv : swedish" + "\n" + \
                       "‚ï† tg : tajik" + "\n" + \
                       "‚ï† ta : tamil" + "\n" + \
                       "‚ï† te : telugu" + "\n" + \
                       "‚ï† th : thai" + "\n" + \
                       "‚ï† tr : turkish" + "\n" + \
                       "‚ï† uk : ukrainian" + "\n" + \
                       "‚ï† ur : urdu" + "\n" + \
                       "‚ï† uz : uzbek" + "\n" + \
                       "‚ï† vi : vietnamese" + "\n" + \
                       "‚ï† cy : welsh" + "\n" + \
                       "‚ï† xh : xhosa" + "\n" + \
                       "‚ï† yi : yiddish" + "\n" + \
                       "‚ï† yo : yoruba" + "\n" + \
                       "‚ï† zu : zulu" + "\n" + \
                       "‚ï† fil : Filipino" + "\n" + \
                       "‚ï† he : Hebrew" + "\n" + \
                       "‚ïö‚ïê‚ïê[ Jangan Typo ]" + "\n" + "\n\n" + \
                         "Contoh : À¢·¥¨·µû-·¥µ·¥∞ ·∂†·¥±·¥∫·¥∞·µû ·¥∂·¥±·¥∏·¥±À£"
    return helpTranslate
#==============================================================================#
def lineBot(op):
    global AsulLogged
    global ki2
    global user2
    global readAlert
    global lgncall
    global save1
    try:
        if op.type == 0:
            print ("[ 0 ] END OF OPERATION")
            return
        if op.type == 5:
            print ("[ 5 ] NOTIFIED ADD CONTACT")
            if settings["autoAdd"] == True:
                line.sendMessage(op.param1, "‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥  ASUL BOT Python3 By ‚îÖ‚ïê‡§π‡§µ„Åï‡∫π‡ßß„Åï‡∏±‡ß©‡Æ¥‡¶£‡ßß‡§π‚ïê‚îÖ \n‡∏õ‡∏•.‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏≤‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ä‡∏•‡∏£‡∏∂‡∏Ç‡∏≠‡∏™‡∏Ñ‡∏¥‡∏õ ‡∏ú‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏ô‡∏ô‡∏∞ ‡∏ó‡∏≥‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏≠‡∏á".format(str(line.getContact(op.param1).displayName)))
        if op.type == 5:
            print ("[ 5 ] NOTIFIED BLOCK CONTACT")
            if settings["autoBlock"] == True:
                line.blockContact(op.param1)
        if op.type == 13:
            print ("[ 13 ] NOTIFIED INVITE GROUP")
            group = line.getGroup(op.param1)
            if settings["autoJoin"] == True:
                line.acceptGroupInvitation(op.param1)
        if op.type == 24:
            print ("[ 24 ] NOTIFIED LEAVE ROOM")
            if settings["autoLeave"] == True:
                line.leaveRoom(op.param1)
#-------------------------------------------------------------------------------
        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
                if settings["wblack"] == True:
                    if msg.contentMetadata["mid"] in settings["commentBlack"]:
                        line.sendMessage(msg.to,"sudah masuk daftar hitam")
                        settings["wblack"] = False
                    else:
                        settings["commentBlack"][msg.contentMetadata["mid"]] = True
                        settings["wblack"] = False
                        line.sendMessage(msg.to,"Itu tidak berkomentar")
                elif settings["dblack"] == True:
                    if msg.contentMetadata["mid"] in settings["commentBlack"]:
                        del settings["commentBlack"][msg.contentMetadata["mid"]]
                        line.sendMessage(msg.to,"Done")
                        settings["dblack"] = False
                    else:
                        settings["dblack"] = False
                        line.sendMessage(msg.to,"Tidak ada dalam daftar hitam")
#-------------------------------------------------------------------------------
                elif settings["wblacklist"] == True:
                    if msg.contentMetadata["mid"] in settings["blacklist"]:
                        line.sendMessage(msg.to,"‡∏≠‡∏¢‡∏∏‡πà‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‡πÅ‡∏•‡πâ‡∏ß")
                        settings["wblacklist"] = False
                    else:
                        settings["blacklist"][msg.contentMetadata["mid"]] = True
                        settings["wblacklist"] = False
                        line.sendMessage(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                        
                elif settings["dblacklist"] == True:
                    if msg.contentMetadata["mid"] in settings["blacklist"]:
                        del settings["blacklist"][msg.contentMetadata["mid"]]
                        line.sendMessage(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                        settings["dblacklist"] = False
                    else:
                        settings["dblacklist"] = False
                        line.sendMessage(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
#-------------------------------------------------------------------------------
        if op.type == 25 or op.type == 26:
            print ("[ 25 ] SEND MESSAGE")
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
            if msg.contentType == 0:
                if text is None:
                    return
#==============================================================================#
            if msg._from in admin:
                if msg.text in ["Help"]:
                    helpMessage = helpmessage()
                    line.sendMessage(to, str(helpMessage))
                    line.sendContact(to, "u5d777f646c37180c939be97aa5097096")
                elif msg.text in ["‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á","‡∏Ñ‡∏™"]:
                    helpMessage2 = helpmessage2()
                    line.sendMessage(to, str(helpMessage2))
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_163340.jpg")
                elif msg.text in ["‡∏™‡∏±‡πà‡∏á1"]:
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_140004.png")
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_140114.png")
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_140151.png")
                elif text.lower() == 'texttospeech':
                    helpTextToSpeech = helptexttospeech()
                    line.sendMessage(to, str(helpTextToSpeech))
                elif text.lower() == 'translate':
                    helpTranslate = helptranslate()
                    line.sendMessage(to, str(helpTranslate))
#==============================================================================#
                elif text.lower() == 'speed':
                    start = time.time()
                    line.sendMessage(to, "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà99%Complete")
                    elapsed_time = time.time() - start
                    line.sendMessage(to,format(str(elapsed_time)))
                elif text.lower() == 'ksp':
                    start = time.time()
                    as1.sendMessage(to, "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà99%Complete")
                    elapsed_time = time.time() - start
                    as1.sendMessage(to,format(str(elapsed_time)))
                elif msg.text in ["Restart","‡∏£‡∏µ‡∏ö‡∏π‡∏ï","‡∏£‡∏ö"]:
                    line.sendMessage(to, "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà99%Complete")
                    time.sleep(7)
                    line.sendMessage(to, "Restart ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                    restartBot()
                elif text.lower() == '‡∏≠‡∏≠‡∏ô':
                    timeNow = time.time()
                    runtime = timeNow - botStart
                    runtime = format_timespan(runtime)
                    line.sendMessage(to, "ASUL Bot ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ {}".format(str(runtime)))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
                    try:
                        arr = []
                        owner = "u5d777f646c37180c939be97aa5097096"
                        creator = line.getContact(owner)
                        contact = line.getContact(lineMID)
                        grouplist = line.getGroupIdsJoined()
                        contactlist = line.getAllContactIds()
                        blockedlist = line.getBlockedContactIds()
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ]"
                        ret_ += "\n‚ï† Line : {}".format(contact.displayName)
                        ret_ += "\n‚ï† Group : {}".format(str(len(grouplist)))
                        ret_ += "\n‚ï† Friend : {}".format(str(len(contactlist)))
                        ret_ += "\n‚ï† Blocked : {}".format(str(len(blockedlist)))
                        ret_ += "\n‚ï†‚ïê‚ïê[ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó ]"
                        ret_ += "\n‚ï† Version : ASUL 1Kicker"
                        ret_ += "\n‚ï† Creator : {}".format(creator.displayName)
                        ret_ += "\n‚ïö‚ïê‚ïê[ ASUL Bot Py3 By:‚îÖ‚ïê‡§π‡§µ„Åï‡∫π‡ßß„Åï‡∏±‡ß©‡Æ¥‡¶£‡ßß‡§π‚ïê‚îÖ ]"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#==============================================================================#
                elif text.lower() == '‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡πà‡∏≤':
                    try:
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ]"
                        if settings["autoAdd"] == True: ret_ += "\n‚ï†‚éÜ Auto Add ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Auto Add ‚ùå"
                        if settings["autoBlock"] == True: ret_ += "\n‚ï†‚éÜ Auto Block ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Auto Block ‚ùå"
                        if settings["autoJoin"] == True: ret_ += "\n‚ï†‚éÜ Auto Join ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Auto Join ‚ùå"
                        if settings["autoLeave"] == True: ret_ += "\n‚ï†‚éÜ Auto Leave ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Auto Leave ‚ùå"
                        if settings["autoRead"] == True: ret_ += "\n‚ï†‚éÜ Auto Read ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Auto Read ‚ùå"
                        if settings["checkSticker"] == True: ret_ += "\n‚ï†‚éÜ Check Sticker ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Check Sticker ‚ùå"
                        if settings["detectMention"] == True: ret_ += "\n‚ï† Detect Mention ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ Detect Mention ‚ùå"
                        if settings["Mentionkick"] == True: ret_ += "\n‚ï†‚éÜ ‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚ùå"
                        if settings["checkContact"] == True: ret_ += "\n‚ï†‚éÜ ‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ó. ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ó. ‚ùå"
                        if settings["Sambutan"] == True: ret_ += "\n‚ï†‚éÜ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢ ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢ ‚ùå"
                        if settings["Api"] == True: ret_ += "\n‚ï† ‡∏£‡∏∞‡∏ö‡∏öAPI ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏£‡∏∞‡∏ö‡∏öAPI ‚ùå"
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ]"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
                
                elif text.lower() == '‡πÄ‡∏ä‡∏Ñ‡∏Å‡∏±‡∏ô':
                    try:
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ]"
                        if settings["protect"] == True: ret_ += "\n‚ï†‚éÜ ‡∏ö‡∏≠‡∏ó‡∏Å‡∏±‡∏ô ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏ö‡∏≠‡∏ó‡∏Å‡∏±‡∏ô ‚ùå"
                        if settings["qrprotect"] == True: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‚ùå"
                        if settings["inviteprotect"] == True: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚ùå"
                        if settings["cancelprotect"] == True: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å ‚úÖ"
                        else: ret_ += "\n‚ï†‚éÜ ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å ‚ùå"
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ]"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#-------------------------------------------------------------------------------
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô':
                    if msg._from in Owner:
                        if settings["protect"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô")
                        else:
                            settings["protect"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                                
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô':
                    if msg._from in Owner:
                        if settings["protect"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô")
                        else:
                            settings["protect"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
#----------------------------------------------------------------------------------------                        
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á':
                    if msg._from in Owner:
                        if settings["qrprotect"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            settings["qrprotect"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                                
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á':
                    if msg._from in Owner:
                        if settings["qrprotect"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            settings["qrprotect"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏∏‡πà")
#-------------------------------------------------------------------------------
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏¥‡∏ç':
                    if msg._from in Owner:
                        if settings["inviteprotect"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            settings["inviteprotect"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                                
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏¥‡∏ç':
                    if msg._from in Owner:
                        if settings["inviteprotect"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            settings["inviteprotect"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                            else:
                                line.sendMessage(msg.to,"‚û≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
#-------------------------------------------------------------------------------
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å':
                    if msg._from in Owner:
                        if settings["cancelprotect"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Already On")
                            else:
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Set To On")
                        else:
                            settings["cancelprotect"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Set To On")
                            else:
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Already On")
                                
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å':
                    if msg._from in Owner:
                        if settings["cancelprotect"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Already Off")
                            else:
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Set To Off")
                        else:
                            settings["cancelprotect"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Set To Off")
                            else:
                                line.sendMessage(msg.to,"‚û≤ Protection Cancel Invite Already Off")
#-------------------------------------------------------------------------------
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î':
                    if msg._from in Owner:
                        settings["protect"] = True
                        settings["qrprotect"] = True
                        settings["inviteprotect"] = True
                        settings["cancelprotect"] = True
                        line.sendMessage(msg.to,"‚û≤ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
                    else:
                        line.sendMessage(msg.to,"‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                        		            
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î':
                    if msg._from in Owner:
                        settings["protect"] = False
                        settings["qrprotect"] = False
                        settings["inviteprotect"] = False
                        settings["cancelprotect"] = False
                        line.sendMessage(msg.to,"‚û≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
                    else:
                        line.sendMessage(msg.to,"‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
#-------------------------------------------------------------------------------
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏î':
                    settings["autoAdd"] = True
                    settings["autoBlock"] = False
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î Auto Add‚úîÔ∏è\n‡∏õ‡∏¥‡∏îAuto Block‚ùå")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏î':
                    settings["autoAdd"] = False
                    settings["autoBlock"] = True
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î Auto Add‚ùå\n‡πÄ‡∏õ‡∏¥‡∏î Auto Block‚úîÔ∏è")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î Auto Join‚úîÔ∏è")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î Auto Join‚ùå")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å':
                    settings["autoLeave"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î Auto Leave")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å':
                    settings["autoLeave"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î Auto Leave")
                elif text.lower() == 'read on':
                    settings["autoRead"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î Auto Read‚úîÔ∏è")
                elif text.lower() == 'read off':
                    settings["autoRead"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î Auto Read‚ùå")
                elif text.lower() == 'checksticker on':
                    settings["checkSticker"] = True
                    line.sendMessage(to, "Berhasil mengaktifkan Check Details Sticker")
                elif text.lower() == 'checksticker off':
                    settings["checkSticker"] = False
                    line.sendMessage(to, "Berhasil menonaktifkan Check Details Sticker")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ':
                    settings["detectMention"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏Ñ‚úîÔ∏è")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ':
                    settings["detectMention"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏Ñ‚ùå")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ':
                    settings["Mentionkick"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‚úîÔ∏è")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ':
                    settings["Mentionkick"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‚ùå")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î':
                    settings["Api"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏öAPI‚úîÔ∏è")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î':
                    settings["Api"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏öAPI‚ùå")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó':
                    settings["checkContact"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ó.‚úîÔ∏è")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó':
                    settings["checkContact"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ó.‚ùå")
#==============================================================================#
                elif msg.text in ["‡∏¢‡∏Å"]:
                   if msg.toType == 2:
                       X = line.getGroup(msg.to)
                       if X.invitee is not None:
                           gInviMids = [contact.mid for contact in X.invitee]
                           line.cancelGroupInvitation(msg.to, gInviMids)
                       else:
                           if settings["lang"] == "JP":
                               line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç")
                           else:
                               line.sendMessage(msg.to,"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ")
                   else:
                       if settings["lang"] == "JP":
                           line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ô‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ")
                       else:
                           line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
#==============================================================================#
                elif msg.text in ["‡∏™‡∏≤‡∏ß‡∏°‡∏≤","‡∏ó‡∏±‡∏Å‡∏™‡∏≤‡∏ß"]:
                     line.sendMessage(msg.to,"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏™‡∏ß‡∏¢")
                     as1.sendMessage(msg.to,"‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏π‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö")
                     line.sendMessage(msg.to,"‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡∏Å!!!!")
                     time.sleep(0.2)
                     as1.sendMessage(msg.to,"‡πÄ‡∏Å‡πä‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏°‡πà‡∏≠‡∏°‡∏±‡πà‡∏á‡∏á‡πà‡∏∞")
                     time.sleep(0.1)
                     as1.sendMessage(msg.to,"üò≠üò≠üò≠")
                     time.sleep(0.2)
                     line.sendMessage(msg.to,"‡πÅ‡∏°‡πà‡∏á ‡∏ß‡∏∏‡πà‡∏ô‡∏ß‡∏≤‡∏¢‡∏à‡∏¥‡∏á‡πÜ ‡πÄ‡∏î‡∏∞‡πÑ‡∏•‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏°‡πà‡∏á")
#==============================================================================#
                elif msg.text in ["Aslogin","‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á","qr"]:
                        if AsulLogged == False:
                            lgncall = msg.to
                            ki2 = ASUL(keepLoggedIn=logincall)
                            AsulLogged = True
                            now2 = datetime.datetime.now()
                            nowT = datetime.datetime.strftime(now2,"%H")
                            nowM = datetime.datetime.strftime(now2,"%M")
                            nowS = datetime.datetime.strftime(now2,"%S")
                            tm = "\n\n"+nowT+":"+nowM+":"+nowS
                            line. sendMessage(msg.to,"‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à Asul ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß"+tm)
                        else:
                            line.sendMessage(msg.to,"Asul ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
                elif msg.text.lower() == ".":
                        gs = []
                        try:
                            gs = line.getGroup(msg.to).members
                        except:
                            try:
                                gs = line.getRoom(msg.to).contacts
                            except:
                                pass
                        tlist = ""
                        for i in gs:
                            tlist = tlist+i.displayName+" "+i.mid+"\n\n"
                        if AsulLogged == True:
                            try:
                                ki2.sendMessage(user1,tlist)
                            except:
                                ki2.new_post(tlist)
                        else:
                            line.sendMessage(msg.to,"Asul ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô")
#==============================================================================#
                elif msg.text in ["Reject","‡∏•‡∏ö‡∏£‡∏±‡∏ô"]:
                    gid = line.getGroupIdsInvited()
                    for i in gid:
                        line.rejectGroupInvitation(i)
                    if settings["lang"] == "JP":
                        line.sendMessage(msg.to,"‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ó‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                    else:
                        line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°")
                elif msg.text in ["Reject1","‡∏•‡∏ö‡∏£‡∏±‡∏ô1"]:
                    gid = ki2.getGroupIdsInvited()
                    for i in gid:
                        ki2.rejectGroupInvitation(i)
                    if settings["lang"] == "JP":
                        ki2.sendMessage(msg.to,"‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ó‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                    else:
                        ki2.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°")
            
#==============================================================================#
                elif text.lower() == "‡πÄ‡∏ä‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠":
                    line.sendMessage(msg.to,responsename)
                    as1.sendMessage(msg.to,responsename2)
                    
                elif msg.text.lower() == '‡πÄ‡∏ä‡∏Ñ‡∏ö‡∏≠‡∏ó':
                    if msg._from in admin:
                        line.sendContact(to, lineMID)
                        as1.sendMessage(msg.to,"1!")
                        time.sleep(0.1)
                        line.sendMessage(msg.to,"‡πÑ‡∏≠‡πâ‡∏™‡∏±‡∏™ ‡∏Ç‡∏≠‡∏á‡∏Å‡∏π")
                        time.sleep(0.2)
                        as1.sendMessage(msg.to,"‡πÄ‡∏≠‡∏≠ ‡πÇ‡∏ó‡∏î‡∏ó‡∏µ ‡∏•‡∏∑‡∏°")
                        time.sleep(0.1)
                        line.sendMessage(msg.to,"‡πÑ‡∏õ‡∏´‡∏°‡∏î‡∏•‡∏∞ ‡∏™‡∏°‡∏á‡∏™‡∏°‡∏≠‡∏á\n ‡πÄ‡∏´‡πâ‡∏≠‡∏≠‡∏≠ ‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏Å‡∏π")
                        time.sleep(0.1)
                        line.sendMessage(msg.to,"1!")
                        as1.sendContact(to, as1MID)
                        as1.sendMessage(msg.to,"‡∏≠‡∏±‡πä‡∏¢‡∏¢‡∏∞ ‡∏™‡∏∞‡∏™‡∏∞‡∏™‡∏∞‡∏™‡∏∞")
                        time.sleep(0.1)
                        as1.sendMessage(msg.to,"2!")
                        
                elif text.lower() in ["‡∏Ñ‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å"]:
                  if msg._from in admin:    
                    as1.leaveGroup(msg.to)
               
                elif text.lower() in ["‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤"]:
                  if msg._from in admin:    
                    G = line.getGroup(msg.to)
                    ginfo = line.getGroup(msg.to)
                    G.preventedJoinByTicket = False
                    line.updateGroup(G)
                    invsend = 0
                    Ticket = line.reissueGroupTicket(msg.to)
                    as1.acceptGroupInvitationByTicket(msg.to,Ticket)
                    G = line.getGroup(msg.to)
                    G.preventedJoinByTicket = True
                    line.updateGroup(G)
                    G.preventedJoinByTicket(G)
                    line.updateGroup(G)
#-------------------------------------------------------------------------------
                elif text.lower() == '‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥':
                    if msg._from in Owner:
                        settings["blacklist"] = {}
                        line.sendMessage(msg.to,"‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")
                        
                elif text.lower() == '‡∏î‡∏≥':
                    if msg._from in Owner:
                        settings["wblacklist"] = True
                        line.sendMessage(msg.to,"Send Contact")
                        
                elif msg.text in ["‡∏Ç‡∏≤‡∏ß"]:
                    if msg._from in Owner:
                        settings["dblacklist"] = True
                        line.sendMessage(msg.to,"Send Contact")
#-------------------------------------------------------------------------------
                elif text.lower() == '‡πÄ‡∏ä‡∏Ñ‡∏î‡∏≥':
                    if msg._from in Owner:
                        if settings["blacklist"] == {}:
                            line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                        else:
                            line.sendMessage(msg.to,"‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                            num=1
                            msgs="‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‚ïê‚ïê"
                            for mi_d in settings["blacklist"]:
                                msgs+="\n[%i] %s" % (num, line.getContact(mi_d).displayName)
                                num=(num+1)
                            msgs+="\n‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‚ïê‚ïê‚ïê\n\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥ :  %i" % len(settings["blacklist"])
                            line.sendMessage(msg.to, msgs)
#==============================================================================#
                elif text.lower() == '‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á':
                    if msg._from in Owner:
                        if msg.toType == 2:
                            print ("[ 19 ] KICK ALL MEMBER")
                            _name = msg.text.replace("‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á","")
                            gs = line.getGroup(msg.to)
                            gs = as1.getGroup(msg.to)
    #                       line.sendMessage(msg.to,"„Äå ‡∏£‡∏≤‡∏ä‡∏≤‡∏≠‡∏™‡∏π‡∏£‡∏°‡∏≤‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô „Äç")
    #                       line.sendMessage(msg.to,"„Äå ‡∏Ç‡∏≠‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á „Äç")
                            targets = []
                            for g in gs.members:
                                if _name in g.displayName:
                                    targets.append(g.mid)
                            if targets == []:
                                line.sendMessage(msg.to,"‡∏õ‡∏µ‡∏Å‡∏´‡∏±‡∏Å‡∏≠‡πà‡∏∞")
                            else:
                                for target in targets:
                                    if not target in Bots:
                                        if not target in Owner:
                                            if not target in admin:
                                                try:
                                                    klist=[line,as1]
                                                    kicker=random.choice(klist)
                                                    kicker.kickoutFromGroup(msg.to,[target])
                                                    print (msg.to,[g.mid])
                                                except:
                                                    line.sendMessage(msg.to,"‡∏ö‡∏≤‡∏¢‡∏¢‡∏¢") 
#==============================================================================#
                elif msg.text in ["‡∏ú‡∏™.","Creator","‡∏ú‡∏∏‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á"]:
                     line. sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/18/20180618_215830.jpg")
                     line.sendContact(to,"u5d777f646c37180c939be97aa5097096")
                     line.sendMessage(msg.to,"‚¨ÜüåüÔ∏è‡∏ô‡∏µ‡πà‡πÅ‡∏´‡∏•‡∏∞‡∏ú‡∏™.‡πÄ‡∏ä‡∏•Asul.py2-py3üåü")
                     line.sendMessage(msg.to,"‡∏´‡∏π‡∏¢‡∏¢‡∏¢ ‡∏´‡∏•‡πà‡∏≠‡∏ä‡∏¥‡∏ö‡∏´‡∏≤‡∏¢ ‡∏Ñ‡∏ô‡πÄ‡∏´‡∏µ‡πâ‡∏¢‡πÑ‡∏£‡∏ß‡∏∞‡πÄ‡∏ô‡∏µ‡πà‡∏¢")
                elif msg.text in ["‡πÅ‡∏ü‡∏ô3‡∏ú‡∏™.","‡πÄ‡∏°‡∏µ‡∏¢3‡∏ú‡∏™."]:
                     me1 = line.getContact("u23063489fe593c3c6ced7447facf7607")
                     line. sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me1.pictureStatus)
                     line.sendContact(to,"u23063489fe593c3c6ced7447facf7607")
                elif msg.text in ["‡∏Ñ‡∏ô‡πÉ‡∏´‡∏ô‡∏õ‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏¢","‡πÉ‡∏Ñ‡∏£‡∏´‡πâ‡∏≠‡∏¢","‡πÉ‡∏Ñ‡∏£‡∏õ‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏¢"]:
                     line. sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/1529403824690.jpg")
#                     line.sendContact(to,"u09d6e6f52a7c6d6f711db71a20a4a5eb")
                     line.sendMessage(msg.to,"‚òùÔ∏è‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞ ‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏∞‡∏î‡∏∏‡∏î‡∏õ‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏•‡πâ‡∏°‡∏´‡∏±‡∏ß‡πÅ‡∏ï‡∏Å")
                elif msg.text in ["‡πÄ‡∏Å‡∏ö‡∏õ‡∏≤‡∏Å","‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏≤‡∏Å"]:
                     line. sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/20/1529223154576.jpg")
                     line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/20/1529223156208.jpg")
                     line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/20/1529223157811.jpg")
                elif msg.text in ["Me","‡∏Ñ‡∏ó","‡∏Å‡∏∏","‡πÄ‡∏Å‡πä‡∏≤"]:
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, lineMID)
                    line.sendMessage(msg.to,"A “âs “âu “âl “â S “âe “âl “âf “âB “âo “ât “â P “âY “â3 “â")
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_162547.jpg")
                elif msg.text in ["as1","‡∏Ñ‡∏¥‡∏Å1"]:
                    as1.sendContact(to,as1MID)
                    as1.sendMessage(msg.to,"ASUL Kicker1")
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ':
                    line.sendMessage(msg.to,"[MID]\n" +  lineMID)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[DisplayName]\n" + me.displayName)
                elif text.lower() == '‡∏ï‡∏±‡∏™':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[StatusMessage]\n" + me.statusMessage)
                elif text.lower() == '‡∏î‡∏¥‡∏™':
                    me = line.getContact(lineMID)
                    line.sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus)
                elif text.lower() == '‡∏ï‡∏±‡∏ß‡∏Å‡∏∏':
                    line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/18/IMG_20180616_205733990.jpg")
                elif text.lower() == '‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendVideoWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus + "/vp")
                elif text.lower() == '‡∏õ‡∏Å':
                    me = line.getContact(lineMID)
                    cover = line.getProfileCoverURL(lineMID)    
                    line.sendImageWithURL(msg.to, cover)
                elif msg.text.lower().startswith("‡∏Ñ‡∏ó "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(msg.to, mi_d)
                elif msg.text.lower().startswith("‡πÑ‡∏≠‡∏î‡∏µ "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        ret_ = "[ ‡πÑ‡∏≠‡∏î‡∏µ ]"
                        for ls in lists:
                            ret_ += "\nüëâ" + ls
                        line.sendMessage(msg.to, str(ret_))
                elif msg.text.lower().startswith("‡∏ä‡∏∑‡πà‡∏≠ "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Display Name ]\n" + contact.displayName)
                elif msg.text.lower().startswith("‡∏ï‡∏±‡∏™ "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Status Message ]\n{}" + contact.statusMessage)
                elif msg.text.lower().startswith("‡∏î‡∏¥‡∏™ "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus + "/vp"
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏õ‡∏Å "):
                    if line != None:
                        if 'MENTION' in msg.contentMetadata.keys()!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = line.getProfileCoverURL(ls)
                                line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("copy "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        for mention in mentionees:
                            contact = mention["M"]
                            break
                        try:
                            line.cloneContactProfile(contact)
                            line.sendMessage(msg.to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡πá‡∏≠‡∏û‡∏õ‡∏µ‡πâ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå...")
                        except:
                            line.sendMessage(msg.to, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡πá‡∏≠‡∏û‡∏õ‡∏µ‡πâ‡πÑ‡∏î‡πâ..")
                elif text.lower() == '‡∏Å‡∏•‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á':
                    try:
                        lineProfile.displayName = str(myProfile["displayName"])
                        lineProfile.statusMessage = str(myProfile["statusMessage"])
                        lineProfile.pictureStatus = str(myProfile["pictureStatus"])
                        line.updateProfileAttribute(8, lineProfile.pictureStatus)
                        line.updateProfile(lineProfile)
                        line.sendMessage(msg.to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏°")
                    except:
                        line.sendMessage(msg.to, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ")
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        pass
                    else:
                        for target in targets:
                            sendMessageWithMention(to,target)
                elif text.lower() == '‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        pass
                    else:
                        for target in targets:
                            line.sendContact(msg.to,target)
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        pass
                    else:
                        mc = "‡πÑ‡∏≠‡∏î‡∏µ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ôüëá"
                        for mi_d in targets:
                            mc += "\n‚úíÔ∏è->" + mi_d
                        line.sendMessage(to,mc)
                elif msg.text in ["‡πÄ‡∏ï‡∏∞‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô"]:
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        pass
                    else:
                        for target in targets:
                            if target in admin:
                                pass
                            else:
                                try:
                                    line.kickoutFromGroup(to,[target])
                                except:
                                    pass
#==============================================================================#
                elif msg.text.lower().startswith("mimicadd "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            settings["mimic"]["target"][target] = True
                            line.sendMessage(msg.to,"Target ditambahkan!")
                            break
                        except:
                            line.sendMessage(msg.to,"Added Target Fail !")
                            break
                elif msg.text.lower().startswith("mimicdel "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            del settings["mimic"]["target"][target]
                            line.sendMessage(msg.to,"Target dihapuskan!")
                            break
                        except:
                            line.sendMessage(msg.to,"Deleted Target Fail !")
                            break
                elif text.lower() == 'mimiclist':
                    if settings["mimic"]["target"] == {}:
                        line.sendMessage(msg.to,"Tidak Ada Target")
                    else:
                        mc = "‚ïî‚ïê‚ïê[ Mimic List ]"
                        for mi_d in settings["mimic"]["target"]:
                            mc += "\n‚ï† "+line.getContact(mi_d).displayName
                        line.sendMessage(msg.to,mc + "\n‚ïö‚ïê‚ïê[ Finish ]")
                    
                elif "mimic" in msg.text.lower():
                    sep = text.split(" ")
                    mic = text.replace(sep[0] + " ","")
                    if mic == "on":
                        if settings["mimic"]["status"] == False:
                            settings["mimic"]["status"] = True
                            line.sendMessage(msg.to,"Reply Message on")
                    elif mic == "off":
                        if settings["mimic"]["status"] == True:
                            settings["mimic"]["status"] = False
                            line.sendMessage(msg.to,"Reply Message off")
#==============================================================================#
                elif text.lower() == 'groupcreator':
                    group = line.getGroup(to)
                    GS = group.creator.mid
                    line.sendContact(to, GS)
                elif text.lower() == 'groupid':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "[ID Group : ]\n" + gid.id)
                elif text.lower() == 'grouppicture':
                    group = line.getGroup(to)
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    line.sendImageWithURL(to, path)
                elif text.lower() == 'groupname':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "[Nama Group : ]\n" + gid.name)
                elif text.lower() == 'groupticket':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            ticket = line.reissueGroupTicket(to)
                            line.sendMessage(to, "[ Group Ticket ]\nhttps://line.me/R/ti/g/{}".format(str(ticket)))
                        else:
                            line.sendMessage(to, "Grup qr tidak terbuka silahkan buka terlebih dahulu dengan perintah {}openqr".format(str(settings["keyCommand"])))
                elif text.lower() == 'ticket on':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            line.sendMessage(to, "Grup qr sudah terbuka")
                        else:
                            group.preventedJoinByTicket = False
                            line.updateGroup(group)
                            line.sendMessage(to, "Berhasil membuka grup qr")
                elif text.lower() == 'ticket off':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == True:
                            line.sendMessage(to, "Grup qr sudah tertutup")
                        else:
                            group.preventedJoinByTicket = True
                            line.updateGroup(group)
                            line.sendMessage(to, "Berhasil menutup grup qr")
                elif text.lower() == 'ginfo':
                    group = line.getGroup(to)
                    try:
                        gCreator = group.creator.displayName
                    except:
                        gCreator = "Tidak ditemukan"
                    if group.invitee is None:
                        gPending = "0"
                    else:
                        gPending = str(len(group.invitee))
                    if group.preventedJoinByTicket == True:
                        gQr = "Tertutup"
                        gTicket = "Tidak ada"
                    else:
                        gQr = "Terbuka"
                        gTicket = "https://line.me/R/ti/g/{}".format(str(line.reissueGroupTicket(group.id)))
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    ret_ = "‚ïî‚ïê‚ïê[ Group Info ]"
                    ret_ += "\n‚ï† Nama Group : {}".format(str(group.name))
                    ret_ += "\n‚ï† ID Group : {}".format(group.id)
                    ret_ += "\n‚ï† Pembuat : {}".format(str(gCreator))
                    ret_ += "\n‚ï† Jumlah Member : {}".format(str(len(group.members)))
                    ret_ += "\n‚ï† Jumlah Pending : {}".format(gPending)
                    ret_ += "\n‚ï† Group Qr : {}".format(gQr)
                    ret_ += "\n‚ï† Group Ticket : {}".format(gTicket)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
                    line.sendImageWithURL(to, path)
                elif text.lower() == 'groupmemberlist':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        ret_ = "‚ïî‚ïê‚ïê[ Member List ]"
                        no = 0 + 1
                        for mem in group.members:
                            ret_ += "\n‚ï† {}. {}".format(str(no), str(mem.displayName))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ Total {} ]".format(str(len(group.members)))
                        line.sendMessage(to, str(ret_))
                elif text.lower() == 'grouplist':
                        groups = line.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = line.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ Total {} Groups ]".format(str(len(groups)))
                        line.sendMessage(to, str(ret_))
                elif text.lower() == 'ceksider':
                                try:
                                    del cctv['point'][receiver]
                                    del cctv['sidermem'][receiver]
                                    del cctv['cyduk'][receiver]
                                except:
                                    pass
                                cctv['point'][receiver] = msg.id
                                cctv['sidermem'][receiver] = ""
                                cctv['cyduk'][receiver]=True
                elif text.lower() == 'offread':
                                if msg.to in cctv['point']:
                                    cctv['cyduk'][receiver]=False
                                    line.sendText(receiver, cctv['sidermem'][msg.to])

                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å':
                   if settings["Sambutan"] == True:
                       if settings["lang"] == "JP":
                           line.sendMessage(msg.to,"‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‚úîÔ∏è")
                   else:
                       settings["Sambutan"] = True
                       if settings["lang"] == "JP":
                           line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‚úîÔ∏è")

                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å':
                   if settings["Sambutan"] == False:
                       if settings["lang"] == "JP":
                          line.sendMessage(msg.to,"‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‚ùå")
                   else: 
                       settings["Sambutan"] = False
                       if settings["lang"] == "JP":
                           line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‚ùå")

#==============================================================================#          
                elif text.lower() == '‡πÅ‡∏ó‡∏Ñ':
                            if msg.toType == 0:
                                sendMention(to, to, "", "")
                            elif msg.toType == 2:
                                group = line.getGroup(to)
                                contact = [mem.mid for mem in group.members]
                                ct1, ct2, ct3, ct4, ct5, jml = [], [], [], [], [], len(contact)
                                if jml <= 100:
                                    mentionMembers(to, contact)
                                elif jml > 100 and jml <= 200: 
                                    for a in range(0, 99):
                                        ct1 += [contact[a]]
                                    for b in range(100, jml):
                                        ct2 += [contact[b]]
                                    mentionMembers(to, ct1)
                                    mentionMembers(to, ct2)
                                elif jml > 200 and jml <= 300:
                                    for a in range(0, 99):
                                        ct1 += [contact[a]]
                                    for b in range(100, 199):
                                        ct2 += [contact[b]]
                                    for c in range(200, jml):
                                        ct3 += [contact[c]]
                                    mentionMembers(to, ct1)
                                    mentionMembers(to, ct2)
                                    mentionMembers(to, ct3)
                                elif jml > 300 and jml <= 400:
                                    for a in range(0, 99):
                                        ct1 += [contact[a]]
                                    for b in range(100, 199):
                                        ct2 += [contact[b]]
                                    for c in range(200, 299):
                                        ct3 += [contact[c]]
                                    for d in range(300, jml):
                                        ct4 += [contact[d]]
                                    mentionMembers(to, ct1)
                                    mentionMembers(to, ct2)
                                    mentionMembers(to, ct3)
                                    mentionMembers(to, ct4)
                                elif jml > 400 and jml <= 500:
                                    for a in range(0, 99):
                                        ct1 += [contact[a]]
                                    for b in range(100, 199):
                                        ct2 += [contact[b]]
                                    for c in range(200, 299):
                                        ct3 += [contact[c]]
                                    for d in range(300, 399):
                                        ct4 += [contact[d]]
                                    for e in range(400, jml):
                                        ct4 += [contact[e]]
                                    mentionMembers(to, ct1)
                                    mentionMembers(to, ct2)
                                    mentionMembers(to, ct3)
                                    mentionMembers(to, ct4)
                                    mentionMembers(to, ct5)
#===================================================================#
                elif "‡∏≠‡∏±‡∏ü‡∏ä‡∏∑‡πà‡∏≠ " in msg.text:
                    separate = msg.text.split(" ")
                    string = msg.text.replace(separate[0] + " ","")
                    if len(string) <= 10000000000:
                        profile = line.getProfile()
                        profile.displayName = string
                        line.updateProfile(profile)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô " + string + "")
#==============================================================================#
                elif msg.text in ["Virus","‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£"]:
                    line.sendContact(to, "Virus AsulBot Py3\n‡πÄ‡∏î‡πâ‡∏á‡∏î‡∏∂‡πã‡∏á‡∏î‡∏µ‡∏°‡∏±‡πä‡∏¢‡∏à‡πä‡∏∞ ‡∏≠‡∏¥‡∏≠‡∏¥',")
#==============================================================================#
                elif text.lower() == '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™':
                            settings["changePicture"] = True
                            line.sendMessage(to, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ")
                elif text.lower() == '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™1':
                            settings["changePicture1"] = True
                            as1.sendMessage(to, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ")
                elif text.lower() == '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ':
                            if msg.toType == 2:
                                if to not in settings["changeGroupPicture"]:
                                    settings["changeGroupPicture"].append(to)
                                line.sendMessage(to, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ")


#==============================================

                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hr + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\n‡πÄ‡∏ß‡∏•‡∏≤ : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read['readPoint']:
                            try:
                                del read['readPoint'][msg.to]
                                del read['readMember'][msg.to]
                                del read['readTime'][msg.to]
                            except:
                                pass
                            read['readPoint'][msg.to] = msg.id
                            read['readMember'][msg.to] = ""
                            read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                            read['ROM'][msg.to] = {}
                            with open('read.json', 'w') as fp:
                                json.dump(read, fp, sort_keys=True, indent=4)
                                line.sendMessage(msg.to,"Lurking already on")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                            pass
                        read['readPoint'][msg.to] = msg.id
                        read['readMember'][msg.to] = ""
                        read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                        read['ROM'][msg.to] = {}
                        with open('read.json', 'w') as fp:
                            json.dump(read, fp, sort_keys=True, indent=4)
                            line.sendMessage(msg.to, "Set reading point:\n" + readTime)
                            
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hr + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to not in read['readPoint']:
                        line.sendMessage(msg.to,"Lurking already off")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                              pass
                        line.sendMessage(msg.to, "Delete reading point:\n" + readTime)
    
                elif text.lower() == 'lurking reset':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read["readPoint"]:
                        try:
                            del read["readPoint"][msg.to]
                            del read["readMember"][msg.to]
                            del read["readTime"][msg.to]
                        except:
                            pass
                        line.sendMessage(msg.to, "Reset reading point:\n" + readTime)
                    else:
                        line.sendMessage(msg.to, "Lurking belum diaktifkan ngapain di reset?")
                        
                elif text.lower() == '‡∏≠‡πà‡∏≤‡∏ô':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hr + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\n‡πÄ‡∏ß‡∏•‡∏≤ : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if receiver in read['readPoint']:
                        if read["ROM"][receiver].items() == []:
                            line.sendMessage(receiver,"[ Reader ]:\nNone")
                        else:
                            chiya = []
                            for rom in read["ROM"][receiver].items():
                                chiya.append(rom[1])
                            cmem = line.getContacts(chiya) 
                            zx = ""
                            zxc = ""
                            zx2 = []
                            xpesan = '[ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô ]:\n'
                        for x in range(len(cmem)):
                            xname = str(cmem[x].displayName)
                            pesan = ''
                            pesan2 = pesan+"@c\n"
                            xlen = str(len(zxc)+len(xpesan))
                            xlen2 = str(len(zxc)+len(pesan2)+len(xpesan)-1)
                            zx = {'S':xlen, 'E':xlen2, 'M':cmem[x].mid}
                            zx2.append(zx)
                            zxc += pesan2
                        text = xpesan+ zxc + "\n[ ‡πÄ‡∏ß‡∏•‡∏≤ ]: \n" + readTime
                        try:
                            line.sendMessage(receiver, text, contentMetadata={'MENTION':str('{"MENTIONEES":'+json.dumps(zx2).replace(' ','')+'}')}, contentType=0)
                        except Exception as error:
                            print (error)
                        pass
                    else:
                        line.sendMessage(receiver,"Lurking has not been set.")

                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ':
                    try:
                        del cctv['point'][msg.to]
                        del cctv['sidermem'][msg.to]
                        del cctv['cyduk'][msg.to]
                    except:
                        pass
                    cctv['point'][msg.to] = msg.id
                    cctv['sidermem'][msg.to] = ""
                    cctv['cyduk'][msg.to]=True 
                    settings["Sider"] = True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‚úîÔ∏è")

                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ':
                    if msg.to in cctv['point']:
                       cctv['cyduk'][msg.to]=False
                       settings["Sider"] = False
                       line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‚ùå")
                    else:
                        line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‚ùå")

#==============================================================================#
                elif msg.text.lower().startswith("say-af "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'af'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
        
                elif msg.text.lower().startswith("say-sq "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sq'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ar "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ar'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hy "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hy'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-bn "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'bn'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ca "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ca'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-cn "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-cn'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-tw "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-tw'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-yue "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-yue'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-cs "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'cs'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-da "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'da'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-nl "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'nl'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-au "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-au'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-uk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-uk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-us "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-us'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-eo "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'eo'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-fi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'fi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-fr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'fr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-de "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'de'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-el "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'el'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hu "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hu'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-is "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'is'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-id "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'id'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-it "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'it'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ja "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ja'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-km "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'km'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ko "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ko'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-la "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'la'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-lv "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'lv'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-mk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'mk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-no "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'no'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-pl "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'pl'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-pt "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'pt'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-do "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ro'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ru "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ru'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-si "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'si'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es-es "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es-es'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es-us "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es-us'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sw "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sw'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sv "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sv'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ta "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ta'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("‡∏û‡∏π‡∏î "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'th'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-tr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'tr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-uk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'uk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-vi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'vi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-cy "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'cy'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
#==============================================================================# 
                elif msg.text.lower().startswith("tr-af "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='af')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sq "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sq')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-am "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='am')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ar "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ar')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-az "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='az')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-eu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='eu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-be "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='be')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bs "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bs')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ca "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ca')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ceb "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ceb')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ny "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ny')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zh-cn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zh-cn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zh-tw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zh-tw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-co "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='co')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-cs "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='cs')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-da "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='da')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-nl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='nl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-en "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='en')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-et "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='et')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ka "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ka')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-de "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='de')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-el "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='el')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ht "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ht')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ha "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ha')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-haw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='haw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-iw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='iw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hmn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hmn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-is "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='is')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ig "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ig')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-id "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='id')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ga "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ga')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-it "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='it')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ja "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ja')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-jw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='jw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-kn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='kn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-kk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='kk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-km "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='km')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ko "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ko')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ku "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ku')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ky "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ky')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lo "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lo')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-la "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='la')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lv "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lv')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lb "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lb')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ms "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ms')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ml "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ml')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-my "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='my')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ne "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ne')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-no "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='no')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ps "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ps')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fa "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fa')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pa "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pa')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ro "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ro')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ru "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ru')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sm "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sm')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gd "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gd')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-st "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='st')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sd "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sd')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-si "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='si')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-so "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='so')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-es "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='es')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-su "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='su')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sv "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sv')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-tg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='tg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ta "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ta')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-te "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='te')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-th "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='th')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-tr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='tr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-uk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='uk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ur "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ur')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-uz "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='uz')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-vi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='vi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-cy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='cy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-xh "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='xh')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-yi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='yi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-yo "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='yo')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fil "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fil')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-he "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='he')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
#==============================================================================#
                elif "Leave " in msg.text:
                    separate = msg.text.split(" ")
                    number = msg.text.replace(separate[0] + " ","")
                    groups = line.getGroupIdsJoined()
                    group = groups[int(number)]
                    for i in group:
                        ginfo = line.getGroup(i).name
                        if ginfo == group:
                            line.leaveGroup(i)
                            line.sendMessage(msg.to,"Berhasil keluar di grup " +str(ginfo.name))
                elif "‡∏≠‡∏≠‡∏Å " in msg.text:
                    proses = text.split(" ")
                    ng = text.replace(proses[0] + " ","")
                    gid = line.getGroupIdsJoined()
                    for i in gid:
                        h = line.getGroup(i).name
                        if h == ng:
                            line.leaveGroup(i)
                            line.sendMessage(to,"‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°<<< " +h+ " >>>‡πÅ‡∏•‡πâ‡∏ß‚úîÔ∏è")

#==============================================================================#   
                elif "spamtag @" in msg.text.lower():
                   _name = msg.text.replace("spamtag @","")
                   _nametarget = _name.rstrip(' ')
                   gs = line.getGroup(msg.to)
                   for g in gs.members:
                       if _nametarget == g.displayName:
                        xname = g.displayName
                        xlen = str(len(xname)+1)
                        msg.contentType = 0
                        msg.text = "@"+xname+" "
                        msg.contentMetadata ={'MENTION':'{"MENTIONEES":[{"S":"0","E":'+json.dumps(xlen)+',"M":'+json.dumps(g.mid)+'}]}','EMTVER':'4'}
                        line.sendMetion(msg)
                        line.sendMention(msg)
                        line.sendMetion(msg)

                elif "Spam " in msg.text:
                    txt = msg.text.split(" ")
                    jmlh = int(txt[2])
                    teks = msg.text.replace("Spam "+str(txt[1])+" "+str(jmlh)+" ","")
                    tulisan = jmlh * (teks+"\n")
                    if txt[1] == "on":
                        if jmlh <= 100000:
                           for x in range(jmlh):
                               line.sendMessage(msg.to, teks)
                        else:
                           line.sendMessage(msg.to, "Out of Range!")
                    elif txt[1] == "off":
                        if jmlh <= 100000:
                            line.sendMessage(msg.to, tulisan)
                        else:
                            line.sendMessage(msg.to, "Out Of Range!")

                elif msg.text.lower().startswith("/ "):
                   txt = text.split(" ")
                   jmlh = int(txt[2])
                   teks = text.replace(" "+str(txt[1])+" "+str(jmlh)+ " ","")
                   tulisan = jmlh * (teks+"\n")
                   if txt[1] == "on":
                        if jmlh <= 10000:
                             for x in range(jmlh):
                                   line.sendMessage(msg.to, teks)
                        else:
                               line.sendMessage(msg.to, "Out of range! ")
                   elif txt[1] == "off":
                         if jmlh <= 10000:
                               line.sendMessage(msg.to, tulisan)
                         else:
                               line.sendMessage(msg.to, "Out of range! ")

                elif "nuke" in msg.text.lower():
                  if msg.toType == 2:
#                    print  ("ok")
                    _name = msg.text.replace("nuke","")
                    gs = line.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _name in g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        line.sendMessage(msg.to,"Not found.")
                    else:
                        for target in targets:
                                line.kickoutFromGroup(msg.to,[target])
                                print (msg.to,[g.mid])


                elif "invitegroupcall" in msg.text.lower():
                            if msg.toType == 2:
                                sep = text.split(" ")
                                strnum = text.replace(sep[0] + " ","")
                                num = int(strnum)
                                line.sendMessage(to, "Berhasil mengundang kedalam telponan group")
                                for var in range(0,num):
                                    group = line.getGroup(to)
                                    members = [mem.mid for mem in group.members]
                                    line.acquireGroupCallRoute(to)
                                    line.inviteIntoGroupCall(to, contactIds=members)

                elif text.lower().startswith("music2 "):
                            try:
                                search = text.lower().replace("music2 ","")
                                r = requests.get("https://farzain.xyz/api/joox.php?apikey=your_api_key&id={}".format(urllib.parse.quote(search))) #untuk api key bisa requests ke web http://www.farzain.xyz/requests.php
                                data = r.text
                                data = json.loads(data)
                                info = data["info"]
                                audio = data["audio"]
                                hasil = " Hasil Musik \n"
                                hasil += "\nPenyanyi : {}".format(str(info["penyanyi"]))
                                hasil += "\nJudul : {}".format(str(info["judul"]))
                                hasil += "\nAlbum : {}".format(str(info["album"]))
                                hasil += "\n\nLink : \n1. Image : {}".format(str(data["gambar"]))
                                hasil += "\n\nLink : \n2. MP3 : {}".format(str(audio["mp3"]))
                                hasil += "\n\nLink : \n3. M4A : {}".format(str(audio["m4a"]))
                                line.sendImageWithURL(msg.to, str(data["gambar"]))
                                line.sendMessage(msg.to, "Downloading...")
                                line.sendAudioWithURL(msg.to, str(audio["mp3"]))
                                line.sendVideoWithURL(msg.to, str(audio["m4a"]))
                                line.sendMessage(msg.to, "Success Download...")
                            except Exception as error:
                            	line.sendMessage(msg.to, " Result Error \n" + str(error))


                elif text.lower() == 'kalender':
                    tz = pytz.timezone("Asia/Makassar")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    line.sendMessage(msg.to, readTime)                 
                elif "screenshotwebsite" in msg.text.lower():
                    sep = text.split(" ")
                    query = text.replace(sep[0] + " ","")
                    with requests.session() as web:
                        r = web.get("http://rahandiapi.herokuapp.com/sswebAPI?key=betakey&link={}".format(urllib.parse.quote(query)))
                        data = r.text
                        data = json.loads(data)
                        line.sendImageWithURL(to, data["result"])
                elif "checkdate" in msg.text.lower():
                    sep = msg.text.split(" ")
                    tanggal = msg.text.replace(sep[0] + " ","")
                    r=requests.get('https://script.google.com/macros/exec?service=AKfycbw7gKzP-WYV2F5mc9RaR7yE3Ve1yN91Tjs91hp_jHSE02dSv9w&nama=ervan&tanggal='+tanggal)
                    data=r.text
                    data=json.loads(data)
                    ret_ = "‚ïî‚ïê‚ïê[ D A T E ]"
                    ret_ += "\n‚ï† Date Of Birth : {}".format(str(data["data"]["lahir"]))
                    ret_ += "\n‚ï† Age : {}".format(str(data["data"]["usia"]))
                    ret_ += "\n‚ï† Birthday : {}".format(str(data["data"]["ultah"]))
                    ret_ += "\n‚ï† Zodiak : {}".format(str(data["data"]["zodiak"]))
                    ret_ += "\n‚ïö‚ïê‚ïê[ Success ]"
                    line.sendMessage(to, str(ret_))
                elif "instagraminfo" in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.instagram.com/{}/?__a=1".format(search))
                        try:
                            data = json.loads(r.text)
                            ret_ = "‚ïî‚ïê‚ïê[ Profile Instagram ]"
                            ret_ += "\n‚ï† Nama : {}".format(str(data["user"]["full_name"]))
                            ret_ += "\n‚ï† Username : {}".format(str(data["user"]["username"]))
                            ret_ += "\n‚ï† Bio : {}".format(str(data["user"]["biography"]))
                            ret_ += "\n‚ï† Pengikut : {}".format(format_number(data["user"]["followed_by"]["count"]))
                            ret_ += "\n‚ï† Diikuti : {}".format(format_number(data["user"]["follows"]["count"]))
                            if data["user"]["is_verified"] == True:
                                ret_ += "\n‚ï† Verifikasi : Sudah"
                            else:
                                ret_ += "\n‚ï† Verifikasi : Belum"
                            if data["user"]["is_private"] == True:
                                ret_ += "\n‚ï† Akun Pribadi : Iya"
                            else:
                                ret_ += "\n‚ï† Akun Pribadi : Tidak"
                            ret_ += "\n‚ï† Total Post : {}".format(format_number(data["user"]["media"]["count"]))
                            ret_ += "\n‚ïö‚ïê‚ïê[ https://www.instagram.com/{} ]".format(search)
                            path = data["user"]["profile_pic_url_hd"]
                            line.sendImageWithURL(to, str(path))
                            line.sendMessage(to, str(ret_))
                        except:
                            line.sendMessage(to, "Pengguna tidak ditemukan")
                elif "instagrampost" in msg.text.lower():
                    separate = msg.text.split(" ")
                    user = msg.text.replace(separate[0] + " ","")
                    profile = "https://www.instagram.com/" + user
                    with requests.session() as x:
                        x.headers['user-agent'] = 'Mozilla/5.0'
                        end_cursor = ''
                        for count in range(1, 999):
                            print('PAGE: ', count)
                            r = x.get(profile, params={'max_id': end_cursor})
                        
                            data = re.search(r'window._sharedData = (\{.+?});</script>', r.text).group(1)
                            j    = json.loads(data)
                        
                            for node in j['entry_data']['ProfilePage'][0]['user']['media']['nodes']: 
                                if node['is_video']:
                                    page = 'https://www.instagram.com/p/' + node['code']
                                    r = x.get(page)
                                    url = re.search(r'"video_url": "([^"]+)"', r.text).group(1)
                                    print(url)
                                    line.sendVideoWithURL(msg.to,url)
                                else:
                                    print (node['display_src'])
                                    line.sendImageWithURL(msg.to,node['display_src'])
                            end_cursor = re.search(r'"end_cursor": "([^"]+)"', r.text).group(1)
                elif "‡∏´‡∏≤‡∏£‡∏π‡∏õ" in msg.text.lower():
                    separate = msg.text.split(" ")
                    search = msg.text.replace(separate[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("http://rahandiapi.herokuapp.com/imageapi?key=betakey&q={}".format(urllib.parse.quote(search)))
                        data = r.text
                        data = json.loads(data)
                        if data["result"] != []:
                            items = data["result"]
                            path = random.choice(items)
                            a = items.index(path)
                            b = len(items)
                            line.sendImageWithURL(to, str(path))
                elif "‡∏¢‡∏π‡∏ó‡∏π‡∏õ." in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html5lib")
                        ret_ = "‚ïî‚ïê‚ïê[ Youtube Result ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ Total {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))
                elif "searchmusic" in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {'songname': search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://ide.fdlrcn.com/workspace/yumi-apis/joox?" + urllib.parse.urlencode(params))
                        try:
                            data = json.loads(r.text)
                            for song in data:
                                ret_ = "‚ïî‚ïê‚ïê[ Music ]"
                                ret_ += "\n‚ï† Nama lagu : {}".format(str(song[0]))
                                ret_ += "\n‚ï† Durasi : {}".format(str(song[1]))
                                ret_ += "\n‚ï† Link : {}".format(str(song[4]))
                                ret_ += "\n‚ïö‚ïê‚ïê[ reading Audio ]"
                                line.sendMessage(to, str(ret_))
                                line.sendAudioWithURL(to, song[3])
                        except:
                            line.sendMessage(to, "Musik tidak ditemukan")
                elif "searchlyric" in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {'songname': search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://ide.fdlrcn.com/workspace/yumi-apis/joox?" + urllib.parse.urlencode(params))
                        try:
                            data = json.loads(r.text)
                            for song in data:
                                songs = song[5]
                                lyric = songs.replace('ti:','Title - ')
                                lyric = lyric.replace('ar:','Artist - ')
                                lyric = lyric.replace('al:','Album - ')
                                removeString = "[1234567890.:]"
                                for char in removeString:
                                    lyric = lyric.replace(char,'')
                                ret_ = "‚ïî‚ïê‚ïê[ Lyric ]"
                                ret_ += "\n‚ï† Nama lagu : {}".format(str(song[0]))
                                ret_ += "\n‚ï† Durasi : {}".format(str(song[1]))
                                ret_ += "\n‚ï† Link : {}".format(str(song[4]))
                                ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]\n{}".format(str(lyric))
                                line.sendMessage(to, str(ret_))
                        except:
                            line.sendMessage(to, "Lirik tidak ditemukan")
            elif msg.contentType == 7:
                if settings["checkSticker"] == True:
                    stk_id = msg.contentMetadata['STKID']
                    stk_ver = msg.contentMetadata['STKVER']
                    pkg_id = msg.contentMetadata['STKPKGID']
                    ret_ = "‚ïî‚ïê‚ïê[ Sticker Info ]"
                    ret_ += "\n‚ï† STICKER ID : {}".format(stk_id)
                    ret_ += "\n‚ï† STICKER PACKAGES ID : {}".format(pkg_id)
                    ret_ += "\n‚ï† STICKER VERSION : {}".format(stk_ver)
                    ret_ += "\n‚ï† STICKER URL : line://shop/detail/{}".format(pkg_id)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))

            elif msg.contentType == 13:
                    if settings["checkContact"] == True:
                        try:
                            contact = line.getContact(msg.contentMetadata["mid"])
                            if line != None:
                                cover = line.getProfileCoverURL(msg.contentMetadata["mid"])
                            else:
                                cover = "Tidak dapat masuk di line channel"
                            path = "http://dl.profile.line-cdn.net/{}".format(str(contact.pictureStatus))
                            try:
                                line.sendImageWithURL(to, str(path))
                            except:
                                pass
                            ret_ = "‚ïî‚ïê‚ïê[ Details Contact ]"
                            ret_ += "\n‚ï† Nama : {}".format(str(contact.displayName))
                            ret_ += "\n‚ï† MID : {}".format(str(msg.contentMetadata["mid"]))
                            ret_ += "\n‚ï† Bio : {}".format(str(contact.statusMessage))
                            ret_ += "\n‚ï† Gambar Profile : http://dl.profile.line-cdn.net/{}".format(str(contact.pictureStatus))
                            ret_ += "\n‚ï† Gambar Cover : {}".format(str(cover))
                            ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                            line.sendMessage(to, str(ret_))
                        except:
                            line.sendMessage(to, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏ó.‡∏ô‡∏µ‡πâ")
            
            elif msg.contentType == 1:
                    if settings["changePicture"] == True:
                        path = line.downloadObjectMsg(msg_id)
                        settings["changePicture"] = False
                        line.updateProfilePicture(path)
                        line.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
            elif msg.contentType == 1:
                    if settings["changePicture1"] == True:
                        path = as1.downloadObjectMsg(msg_id)
                        settings["changePicture1"] = False
                        as1.updateProfilePicture(path)
                        as1.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                    if msg.toType == 2:
                        if to in settings["changeGroupPicture"]:
                            path = line.downloadObjectMsg(msg_id)
                            settings["changeGroupPicture"].remove(to)
                            line.updateGroupPicture(to, path)
                            line.sendMessage(to, "Berhasil mengubah foto group")
#===============================================================================[asulMID - as1MID]
        if op.type == 19:
            print ("[ 19 ] KICKOUT asul MESSAGE")
            try:
                if op.param3 in lineMID:
                    if op.param2 in as1MID:
                        G = as1.getGroup(op.param1)
                        ginfo = as1.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        as1.updateGroup(G)
                        invsend = 0
                        Ticket = as1.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        as1.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = as1.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        as1.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        as1.updateGroup(G)
                    else:
                        G = as1.getGroup(op.param1)
                        ginfo = as1.getGroup(op.param1)
                        as1.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        as1.updateGroup(G)
                        invsend = 0
                        Ticket = as1.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        as1.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = as1.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        as1.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        as1.updateGroup(G)
                        settings["blacklist"][op.param2] = True
#===============================================================================[as1MID lineMID]
                if op.param3 in as1MID:
                    if op.param2 in lineMID:
                        G = line.getGroup(op.param1)
#                        ginfo = line.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        as1.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                    else:
                        G = line.getGroup(op.param1)
#                        ginfo = line.getGroup(op.param1)
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        as1.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                        settings["blacklist"][op.param2] = True
                        
                elif op.param2 not in Bots:
                    if op.param2 in admin:
                        pass
                    elif settings["protect"] == True:
                        settings["blacklist"][op.param2] = True
                        random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                        random.choice(KAC).inviteIntoGroup(op.param1,[op.param3])
                        random.choice(KAC).sendText(op.param1,"‡∏à‡∏∏‡∏Å‡∏°‡∏±‡πâ‡∏¢‡∏•‡πà‡∏∞")
                        
                else:
                    pass
            except:
                pass
#==============================================================================#
        if op.type == 13:
            if op.param2 not in Bots:
                if op.param2 in admin:
                    pass
                elif settings["inviteprotect"] == True:
                    settings["blacklist"][op.param2] = True
                    random.choice(KAC).cancelGroupInvitation(op.param1,[op.param3])
                    random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                    if op.param2 not in Bots:
                        if op.param2 in admin:
                            pass
                        elif settings["cancelprotect"] == True:
                            settings["blacklist"][op.param2] = True
                            random.choice(KAC).cancelGroupInvitation(op.param1,[op.param3])	
#-------------------------------------------------------------------------------
        if op.type == 11:
            if op.param2 not in Bots:
                if op.param2 in admin and Bots:
                    pass
                elif settings["qrprotect"] == True:
                    settings["blacklist"][op.param2] = True
                    G = as1.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    as1.updateGroup(G)
                    random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                else:
                    line. sendMessage(op.param1,"")
            else:
                line.sendMessage(op.param1,"")

#==============================================================================#
        if op.type == 26:
            print ("[ 26 ] RECEIVE MESSAGE")
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
                if settings["autoRead"] == True:
                    line.sendChatChecked(to, msg_id)
                if to in read["readPoint"]:
                    if sender not in read["ROM"][to]:
                        read["ROM"][to][sender] = True
                if sender in settings["mimic"]["target"] and settings["mimic"]["status"] == True and settings["mimic"]["target"][sender] == True:
                    text = msg.text
                    if text is not None:
                        line.sendMessage(msg.to,text)
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
#                        asulc = [" ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏≥‡πÑ‡∏° ‡∏Ç‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà"," ‡∏°‡∏µ‡πÑ‡∏£‡∏£‡∏∂‡∏õ‡πà‡∏≤‡∏ß ","‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏≠‡∏°‡∏≤‡πÅ‡∏ó‡∏Ñ","‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏≠‡∏≤‡πÇ‡∏•‡πà‡∏á‡πà‡∏∞","‡πÅ‡∏ó‡∏Ñ‡∏ö‡πà‡∏≠‡∏¢‡πÜ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏™‡∏≠‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö"]
#                        reb_ = line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_092344.jpg")
                        lists = []
                        for mention in mentionees:
                            if lineMID in mention["M"]:
                              if settings["detectMention"] == True:
                                 line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/20180619_092344.jpg")
                                 sendMention(receiver, sender, "","\n")

                    if 'MENTION' in msg.contentMetadata.keys() != None:
                      if settings["Mentionkick"] == True:
                        name = re.findall(r'@(\w+)', msg.text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        for mention in mentionees:
                             if mention ['M'] in Bots:
                                line.mentiontag(msg.to,[msg._from])
                                line.sendMessage(msg.to, "‡∏ö‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß ‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏ó‡∏Ñ...")
                                line.kickoutFromGroup(msg.to, [msg._from])
                                break

        if op.type == 17:
           print ("MEMBER JOIN TO GROUP")
           if settings["Sambutan"] == True:
             if op.param2 in lineMID:
                 return
             ginfo = line.getGroup(op.param1)
             contact = line.getContact(op.param2)
#             image = "http://dl.profile.line.naver.jp/" + contact.pictureStatus
             asulb = [" ‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ "," ‡∏î‡∏µ‡∏à‡πâ‡∏≤‡∏≤‡∏≤ "," ‡πÇ‡∏¢‡πà‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß "]
             reb_ = random.choice(asulb)
             
#             line.sendImageWithURL(op.param1,image)
             line.sendMessage(op.param1,reb_ + line.getContact(op.param2).displayName + " ‡∏Å‡∏•‡∏∏‡πà‡∏° " +  str(ginfo.name) + "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö")
             line.sendImageWithURL(op.param1,"https://www.img.live/images/2018/06/19/20180619_163340.jpg")

        if op.type == 15:
           print ("MEMBER LEAVE TO GROUP")
           if settings["Sambutan"] == True:
             if op.param2 in lineMID:
                 return
             ginfo = line.getGroup(op.param1)
             contact = line.getContact(op.param2)
             asula = [" ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏ô‡∏∞"," ‡πÑ‡∏õ‡∏ã‡∏∞‡∏•‡∏∞"," ‡∏ö‡πä‡∏≤‡∏¢‡∏ö‡∏≤‡∏¢‡∏¢‡∏¢"," ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢"," ‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡∏ô‡∏•‡πà‡∏∞"," ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô"]
             rea_ = random.choice(asula)
#             image = "http://dl.profile.line.naver.jp/" + contact.pictureStatus
             
             #line.sendImageWithURL(op.param1,image)
             line.sendMessage(op.param1,line.getContact(op.param2).displayName + rea_)
             line.sendImageWithURL(op.param1,"https://www.img.live/images/2018/06/19/20180619_163340.jpg")
             
#==============================================================================#
        if op.type == 26:
            msg = op.message
            if settings["Api"] == True:
                if msg.text in ["‡∏Ñ‡∏ó","Me","me"]:
                            com1 = ["‡πÄ‡∏ä‡∏Ñ‡∏à‡∏±‡∏á ‡∏Å‡∏•‡∏±‡∏ß‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏ä‡∏•‡∏á‡πà‡∏∞","‡∏Ñ‡∏ó.‡πÉ‡∏Ñ‡∏£‡∏•‡πà‡∏∞","‡πÄ‡∏≠‡∏≤‡∏Ñ‡∏ó.‡πÑ‡∏õ‡∏£‡∏±‡∏ô‡∏á‡πà‡∏∞"]
                            com1_ = random.choice(com1)
                            line.sendMessage(msg.to,com1_)
                elif msg.text in ["Help","help","‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"]:
                              com2 = ["‡∏´‡∏±‡∏î‡∏à‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏≠‡∏á‡∏°‡∏±‡πà‡∏á Help‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ","‡∏à‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏á‡πà‡∏∞"]
                              com2_ = random.choice(com2)
                              line.sendMessage(msg.to,com2_)
                
                elif msg.text in ["‡∏ö‡∏≠‡∏ó"]:
                              line.sendMessage(msg.to,"‡∏Å‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ö‡∏≠‡∏ó")
                elif "555" in msg.text.lower():
                              com4 = ["‡∏Ç‡∏≥‡πÑ‡∏£‡∏Å‡∏±‡∏ô‡∏´‡∏ß‡πà‡∏≤","‡∏Ç‡∏≥‡πÑ‡∏£‡∏¢‡∏∞","555‡∏Ç‡∏≥‡∏î‡πâ‡∏ß‡∏¢","‡∏Ç‡∏≥‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏Å‡∏ô‡∏∞‡πÄ‡∏£‡∏≤","5555 ‡∏Ç‡∏≥‡∏î‡πâ‡∏ß‡∏¢","‡∏Ç‡∏°‡∏¥‡∏ö‡∏î‡∏µ‡πÜ‡∏ô‡∏∞ ‡∏Ç‡∏≥‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ç‡∏µ‡πâ‡πÅ‡∏ï‡∏Å","‡∏Ç‡∏≥‡∏à‡∏ô‡∏Ç‡∏µ‡πâ‡πÅ‡∏ï‡∏Å‡∏•‡∏∞‡∏°‡∏±‡πâ‡∏á ‡∏ö‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!"]
                              com4_ = random.choice(com4)
                              line.sendMessage(msg.to,com4_)
                elif msg.text in ["‡∏î‡∏µ‡∏Ñ‡πà‡∏∞","‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡πà‡∏∞","‡∏î‡∏µ‡∏à‡πâ‡∏≤"]:
                              com5 = ["‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö ‡∏Ñ‡∏ô‡∏™‡∏ß‡∏¢","‡∏î‡∏µ‡∏à‡πâ‡∏∞ ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏£‡∏Ñ‡∏±‡∏ö","‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏à‡πâ‡∏≤‡∏≤‡∏≤"]
                              com5_ = random.choice(com5)
                              line.sendMessage(msg.to,com5_)
                elif msg.text in ["‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö","‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö","‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö","‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö"]:
                              com6 = ["‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ ‡πÑ‡∏≠‡πà‡∏ó‡∏¥‡∏î","‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏ö‡∏±‡∏Å‡∏´‡∏≥","‡πÑ‡∏´‡∏ß‡πâ‡∏û‡∏£‡∏∞‡πÄ‡∏ñ‡∏≠‡∏∞‡∏•‡∏π‡∏Å"]
                              com6_ = random.choice(com6)
                              line.sendMessage(msg.to,com6_)
                elif "‡∏°‡∏≠‡∏ô‡∏¥‡πà‡∏á" in msg.text.lower():
                              com7 = ["‡∏°‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πà‡∏á ‡∏ù‡∏±‡∏ô‡∏î‡∏µ‡∏ô‡∏∞555","‡πÄ‡∏ä‡πâ‡∏≤‡∏•‡∏∞‡∏´‡∏£‡∏≠","‡∏°‡∏≠‡∏ô‡∏¥‡πà‡∏á‡πÜ","‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á‡∏•‡∏∞‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡πÄ‡∏ä‡πâ‡∏≤‡∏•‡∏∞‡∏´‡∏£‡∏≠"]
                              com7_ = random.choice(com7)
                              line.sendMessage(msg.to,com7_)
                elif "‡∏°‡∏≠‡πÜ" in msg.text.lower():
                              com17 = ["‡∏°‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πà‡∏á ‡∏ù‡∏±‡∏ô‡∏î‡∏µ‡∏ô‡∏∞555","‡πÄ‡∏ä‡πâ‡∏≤‡∏•‡∏∞‡∏´‡∏£‡∏≠","‡∏°‡∏≠‡∏ô‡∏¥‡πà‡∏á‡πÜ","‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á‡∏•‡∏∞‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡πÄ‡∏ä‡πâ‡∏≤‡∏•‡∏∞‡∏´‡∏£‡∏≠"]
                              com17_ = random.choice(com17)
                              line.sendMessage(msg.to,com17_)
                elif msg.text in ["‡∏ô‡πà‡∏≤‡∏ô"]:
                              com8 = ["‡∏ô‡πà‡∏≤‡∏ô‡πÑ‡∏Å‡∏• ‡πÑ‡∏°‡πà‡πÑ‡∏õ‡∏´‡∏£‡∏≠‡∏Å","‡πÑ‡∏õ‡∏ó‡∏≥‡πÑ‡∏°‡∏ô‡πà‡∏≤‡∏ô","‡∏ô‡πà‡∏≤‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠555"]
                              com8_ = random.choice(com8)
                              line.sendMessage(msg.to,com8_)
                elif msg.text in ["‡∏Å‡∏≥","‡∏Å‡∏≥‡∏´‡∏≥"]:
                              com9 = ["‡∏Å‡∏≥‡∏´‡∏≥‡πÉ‡∏Ñ‡∏£","‡∏´‡∏∑‡πà‡∏ô‡∏à‡∏±‡∏á‡∏à‡∏∞‡∏Å‡∏≥‡πÅ‡∏ï‡πà‡∏´‡∏≥","‡∏Å‡∏≥‡∏´‡∏≥‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏π‡∏î‡πÜ‡πÜ55"]
                              com9_ = random.choice(com9)
                              line.sendMessage(msg.to,com9_)
                elif msg.text in [".‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°","‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°"]:
                              com10 = ["‡πÅ‡∏õ‡πä‡∏ö ‡∏Ç‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà","‡∏≠‡∏¢‡∏π‡πà‡∏ß‡∏µ‡πà5555","‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏±‡πâ‡∏á","‡∏≠‡∏¢‡∏π‡πà‡∏õ‡πà‡∏≤‡∏ß‡∏´‡∏ß‡πà‡∏≤"]
                              com10_ = random.choice(com10)
                              line.sendMessage(msg.to,com10_)
                elif msg.text in ["‡πÑ‡∏õ‡πÉ‡∏´‡∏ô","‡πÑ‡∏õ‡πÑ‡∏´‡∏ô"]:
                              com11 = ["‡πÑ‡∏õ‡πÉ‡∏´‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÇ‡∏ï‡πÅ‡∏•‡πâ‡∏ß","‡∏à‡∏∞‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏á‡πà‡∏∞","‡πÑ‡∏õ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ","‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡πÅ‡∏°‡∏ß‡∏ñ‡∏≤‡∏°555"]
                              com11_ = random.choice(com11)
                              line.sendMessage(msg.to,com11_)
                elif msg.text in ["‡∏Ñ‡∏±‡∏ö"]:
                              com12 = ["‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏±‡∏ö ‡∏´‡∏≥‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß55","‡πÑ‡∏°‡πà‡∏Ñ‡∏±‡∏ö‡∏´‡∏£‡∏≠‡∏Å‡∏°‡∏±‡πâ‡∏á ‡∏≠‡∏¥‡∏≠‡∏¥"]
                              com12_ = random.choice(com12)
                              line.sendMessage(msg.to,com12_)
                elif msg.text in ["‡∏Ñ‡πà‡∏∞","‡∏Ñ‡∏∞","‡∏à‡πâ‡∏∞"]:
                              com13 = ["‡∏û‡∏π‡∏î‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏±‡∏á ‡∏à‡∏µ‡∏ö‡πÑ‡∏î‡πâ‡∏°‡∏∞","‡∏û‡∏π‡∏î‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏±‡∏á ‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏°‡∏µ‡∏¢‡πÄ‡∏£‡∏≤‡πÄ‡∏ñ‡∏≠‡∏∞"]
                              com13_ = random.choice(com13)
                              line.sendMessage(msg.to,com13_)
                elif "‡∏ö‡∏¥‡∏ô" in msg.text.lower():
                              com14 = ["‡∏ö‡∏¥‡∏ô‡∏î‡∏¥ ‡∏à‡∏∞‡∏ï‡∏µ‡πÉ‡∏´‡πâ‡∏õ‡∏µ‡∏Å‡∏´‡∏±‡∏Å","‡∏ö‡∏¥‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏á‡πà‡∏∞ ‡∏´‡∏ô‡∏±‡∏Å‡∏û‡∏∏‡∏á555","‡∏ö‡∏¥‡∏ô‡∏ó‡∏°‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢","‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏õ‡∏µ‡∏Å‡∏´‡∏±‡∏Å‡∏ô‡∏∞"]
                              com14_ = random.choice(com14)
                              line.sendMessage(msg.to,com14_)
                elif "‡∏´‡∏∑‡∏≠" in msg.text.lower():
                              com15 = ["‡∏´‡∏∑‡∏≠‡∏Å‡∏±‡∏ö‡∏û‡∏µ‡πà‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏õ‡∏µ‡πâ‡∏ô‡∏∞","‡∏´‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£ ‡πÉ‡∏´‡∏ô‡πÉ‡∏Ñ‡∏£‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏∑‡∏≠","‡∏≠‡∏¢‡πà‡∏≤‡∏´‡∏∑‡∏≠ ‡πÄ‡∏î‡∏∞‡∏Å‡∏∞‡∏ö‡∏≤‡∏•‡∏•‡∏±‡πà‡∏ô"]
                              com15_ = random.choice(com15)
                              line.sendMessage(msg.to,com15_)
                elif msg.text in ["‡∏´‡πä‡∏∞"]:
                              line.sendMessage(msg.to,"‡∏´‡πä‡∏∞‡∏≠‡∏∞‡πÑ‡∏£ ‡∏´‡∏±‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ü‡∏±‡∏á‡∏î‡∏¥")
                elif "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢" in msg.text.lower():
                              line.sendMessage(msg.to,"‡∏´‡∏≤‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏ô‡∏±‡∏Å ‡∏Ç‡∏≠‡∏à‡∏á‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏ã‡∏∞‡∏Å‡πà‡∏≠‡∏ô.....")
                elif "‡∏£‡πâ‡∏≠‡∏ô" in msg.text.lower():
                              line.sendMessage(msg.to,"‡∏£‡πâ‡∏≠‡∏ô‡∏Å‡πá‡πÑ‡∏õ‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥ ‡πÄ‡∏î‡∏∞‡∏û‡∏µ‡πà‡∏ñ‡∏π‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ ‡∏´‡∏∏‡∏´‡∏∏")
                elif msg.text in ["Sp","Speed","speed"]:
                              line.sendMessage(msg.to,"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß....")
                              line.sendMessage(msg.to,"0.024965118408203")
                elif msg.text in ["‡∏´‡∏≥"]:
                              line.sendMessage(msg.to,"‡∏Å‡πá‡∏´‡∏≥‡∏≠‡πà‡∏∞‡∏î‡∏¥ ‡∏ô‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏™‡∏≤‡∏Å‡∏Å‡∏∞‡πÄ‡∏ö‡∏∑‡∏≠‡∏á‡πà‡∏∞")
                elif msg.text in ["‡πÅ‡∏≠‡∏î","@"]:
                              line.sendMessage(msg.to,"‡πÄ‡∏•‡∏î‡∏µ‡πâ‡πÅ‡∏≠‡πà‡∏ô‡πÄ‡∏¢‡∏™‡∏ï‡∏∞‡πÅ‡∏°‡πà‡∏á ‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡∏ì ‡∏ö‡∏±‡∏î‡∏ô‡∏µ‡πâ")
                              time.sleep(0.1)
                              line.sendMessage(msg.to,"Siriv10:groupcreator")
                              time.sleep(0.1)
                              line.sendMessage(msg.to,"‡∏ô‡∏µ‡πà‡πÑ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ôüîù")
                elif msg.text in ["‡∏£‡∏≠‡∏á","‡∏£‡∏≠‡∏á‡πÅ‡∏≠‡∏î","@@"]:
                              line.sendMessage(msg.to,"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô...")
                              line.sendMessage(msg.to,"Siriv10:‰∫àÂÇô‰ΩúÊàêËÄÖ")
                elif "‡∏Ñ‡∏ß‡∏¢" in msg.text.lower():
                              com16 = ["‡πÄ‡∏á‡∏µ‡πà‡∏¢‡∏ô‡∏á‡πà‡∏∞ ‡πÄ‡∏£‡∏µ‡∏¢‡∏´‡∏≤‡∏Ñ‡∏ß‡∏¢","‡∏´‡∏∑‡∏≠‡∏≠‡∏≠ ‡∏Ñ‡∏ß‡∏¢‡πÉ‡∏Ñ‡∏£"]
                              com16_ = random.choice(com16)
                              line.sendMessage(msg.to,com16_)
                

#==============================================================================#
        if op.type == 26:
            msg = op.message
            if msg.text in ["‡∏Ñ‡∏ô‡πÉ‡∏´‡∏ô‡∏õ‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏¢","‡πÉ‡∏Ñ‡∏£‡∏´‡πâ‡∏≠‡∏¢","‡πÉ‡∏Ñ‡∏£‡∏õ‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏¢"]:
               line. sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/19/1529403824690.jpg")
#               line.sendContact(to,"u09d6e6f52a7c6d6f711db71a20a4a5eb")
               line.sendMessage(msg.to,"‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏∞‡∏î‡∏∏‡∏î‡∏õ‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏•‡πâ‡∏° ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢‚òùÔ∏è")
            elif "‡∏ï‡∏∏‡∏ô" in msg.text.lower():
                         line.sendMessage(msg.to,"‡∏ï‡∏∏‡∏ô‡∏≠‡∏∞‡πÑ‡∏£ ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏π‡∏ô ‡∏ï‡∏π‡∏ô ‡πÄ‡∏î‡∏∞‡∏Å‡∏±‡∏î‡πÉ‡∏™‡πâ‡πÅ‡∏ï‡∏Å")
                         line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/18/20180618_225618.jpg")
            elif msg.text in ["‡∏ï‡∏π‡∏ô","‡∏ï‡∏≤‡∏ï‡∏π‡∏ô","‡∏û‡∏µ‡πà‡∏ï‡∏π‡∏ô","‡πÄ‡∏à‡πâ‡∏ï‡∏∏‡πä‡∏î","‡πÄ‡∏à‡πä‡∏ï‡∏∏‡πä‡∏î"]:
                          com3 = ["‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏≥‡πÑ‡∏°","‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏á‡πà‡∏∞ ‡∏£‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á","‡∏ï‡∏π‡∏ô‡πÉ‡∏´‡∏ô?"]
                          com3_ = random.choice(com3)
                          line.sendMessage(msg.to,com3_)
                          line.sendImageWithURL(msg.to,"https://www.img.live/images/2018/06/18/20180618_225618.jpg")
             
#==============================================================================#
        if op.type == 55:
            print ("[ 55 ] NOTIFIED READ MESSAGE")
            try:
                if cctv['cyduk'][op.param1]==True:
                    if op.param1 in cctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in cctv['sidermem'][op.param1]:
                            pass
                        else:
                            cctv['sidermem'][op.param1] += "\n√¢¬Ä¬¢ " + Name
                            if " " in Name:
                                nick = Name.split(' ')
                                if len(nick) == 2:
                                    mentionMembers(op.param1,[op.param2])
                                else:
                                    mentionMembers(op.param1,[op.param2])
                            else:
                                mentionMembers(op.param1,[op.param2])
                    else:
                        pass
                else:
                    pass
            except:
                pass


        if op.type == 55:
            print ("[ 55 ] NOTIFIED READ MESSAGE")
            try:
                if op.param1 in read['readPoint']:
                    if op.param2 in read['readMember'][op.param1]:
                        pass
                    else:
                        read['readMember'][op.param1] += op.param2
                    read['ROM'][op.param1][op.param2] = op.param2
                    backupData()
                else:
                   pass
            except:
                pass
    except Exception as error:
        logError(error)
#==============================================================================#
while True:
    try:
        ops = oepoll.singleTrace(count=50)
        if ops is not None:
            for op in ops:
                lineBot(op)
                oepoll.setRevision(op.revision)
    except Exception as e:
        logError(e)





